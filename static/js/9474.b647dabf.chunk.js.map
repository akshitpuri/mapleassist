{"version":3,"file":"static/js/9474.b647dabf.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/converters/AudioConverters.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function AudioConverters() {\r\n  const [convertedFiles, setConvertedFiles] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleFiles = async (incoming) => {\r\n    setConvertedFiles([]);\r\n    const converted = [];\r\n\r\n    for (const file of incoming) {\r\n      try {\r\n        const url = URL.createObjectURL(file);\r\n        const mediaEl = document.createElement(file.type.startsWith('video/') ? 'video' : 'audio');\r\n        mediaEl.src = url;\r\n        mediaEl.crossOrigin = 'anonymous';\r\n        mediaEl.muted = true;\r\n\r\n        const context = new AudioContext();\r\n        const source = context.createMediaElementSource(mediaEl);\r\n        const dest = context.createMediaStreamDestination();\r\n        source.connect(context.destination);\r\n        source.connect(dest);\r\n\r\n        const recorder = new MediaRecorder(dest.stream);\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = (e) => chunks.push(e.data);\r\n        recorder.onstop = () => {\r\n          const blob = new Blob(chunks, { type: 'audio/wav' });\r\n          const outputURL = URL.createObjectURL(blob);\r\n          const name = `${file.name.split('.')[0]}.wav`;\r\n          converted.push({ name, url: outputURL, blob });\r\n\r\n          if (converted.length === incoming.length) {\r\n            setConvertedFiles(converted);\r\n            showToast(`Converted ${converted.length} file(s) to .wav`, 'success');\r\n          }\r\n        };\r\n\r\n        mediaEl.oncanplaythrough = () => {\r\n          recorder.start();\r\n          mediaEl.play();\r\n          setTimeout(() => {\r\n            recorder.stop();\r\n            mediaEl.pause();\r\n            context.close();\r\n          }, Math.min(mediaEl.duration * 1000, 15000));\r\n        };\r\n\r\n        document.body.appendChild(mediaEl);\r\n        mediaEl.load();\r\n      } catch {\r\n        showToast(`Error converting ${file.name}`, 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  const downloadZip = async () => {\r\n    const JSZip = (await import('jszip')).default;\r\n    const { saveAs } = await import('file-saver');\r\n\r\n    const zip = new JSZip();\r\n    convertedFiles.forEach(({ name, blob }) => zip.file(name, blob));\r\n    const zipped = await zip.generateAsync({ type: 'blob' });\r\n    saveAs(zipped, 'converted_audio.zip');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"🎧 Audio Converter\">\r\n      <DropZone\r\n        multiple\r\n        accept=\".mp3,.wav,.ogg,.mp4\"\r\n        onMultipleFiles={handleFiles}\r\n      />\r\n\r\n      {/* 📘 SEO Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Convert MP3, OGG, MP4 to WAV in Your Browser</h2>\r\n        <p>\r\n          Instantly convert common audio and video formats into WAV files using a secure,\r\n          browser-based tool. Perfect for music trimming, podcast prep, or audio extraction —\r\n          no upload required.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>🔄 Converts MP3, WAV, OGG, MP4 to WAV format</li>\r\n          <li>🎙️ Works with both audio and video inputs</li>\r\n          <li>📦 Repackage converted audio into ZIP for download</li>\r\n          <li>🔒 100% private — processes offline using Web APIs</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {convertedFiles.length > 0 && (\r\n        <>\r\n          <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n            {convertedFiles.map(({ name, url }, i) => (\r\n              <div key={i} style={{ textAlign: 'center' }}>\r\n                <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n                <audio controls src={url} style={{ width: '180px' }} />\r\n                <a href={url} download={name}>\r\n                  <button style={{\r\n                    marginTop: '8px',\r\n                    padding: '6px 12px',\r\n                    backgroundColor: '#4caf50',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    cursor: 'pointer'\r\n                  }}>\r\n                    Download\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            onClick={downloadZip}\r\n            style={{\r\n              marginTop: '30px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#1976d2',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ⬇ Download All as ZIP\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {toast && (\r\n        <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />\r\n      )}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","AudioConverters","convertedFiles","setConvertedFiles","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","async","converted","incoming","url","URL","createObjectURL","mediaEl","document","createElement","startsWith","src","crossOrigin","muted","context","AudioContext","source","createMediaElementSource","dest","createMediaStreamDestination","connect","destination","recorder","MediaRecorder","stream","chunks","ondataavailable","push","data","onstop","blob","Blob","outputURL","split","oncanplaythrough","start","play","stop","pause","close","Math","min","duration","body","appendChild","load","lineHeight","_Fragment","flexWrap","_ref2","textAlign","controls","width","href","download","JSZip","default","saveAs","zip","forEach","generateAsync"],"sourceRoot":""}