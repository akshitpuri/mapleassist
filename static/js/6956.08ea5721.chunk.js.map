{"version":3,"file":"static/js/6956.08ea5721.chunk.js","mappings":"kJAiEA,QA9DA,SAAiBA,GAA+D,IAA9D,OAAEC,EAAM,gBAAEC,EAAe,OAAEC,EAAS,IAAG,SAAEC,GAAW,GAAOJ,EAC3E,MAAMK,GAAWC,EAAAA,EAAAA,WACVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IA+BnD,OACEC,EAAAA,EAAAA,MAAA,OACEC,UAAU,WACVV,OAhCgBW,IAClBA,EAAEC,iBACF,MAAMC,EAAQC,MAAMC,KAAKJ,EAAEK,aAAaH,OACnB,IAAjBA,EAAMI,SAEVV,EAAiBM,GAEbV,GAAYF,EACdA,EAAgBY,GACPb,GACTA,EAAOa,EAAM,MAuBbK,WAAaP,GAAMA,EAAEC,iBACrBO,QApBgBC,IAAMhB,EAASiB,QAAQC,QAoBlBC,SAAA,EAErBd,EAAAA,EAAAA,MAAA,KAAAc,SAAA,CAAG,mBAAiBpB,EAAW,IAAM,GAAG,2BACxCqB,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,IAAKtB,EACLF,OAAQA,EACRC,SAAUA,EACVwB,SA1BgBhB,IACpB,MAAME,EAAQC,MAAMC,KAAKJ,EAAEiB,OAAOf,OACb,IAAjBA,EAAMI,SAEVV,EAAiBM,GAEbV,GAAYF,EACdA,EAAgBY,GACPb,GACTA,EAAOa,EAAM,MAkBXgB,MAAO,CAAEC,QAAS,UAEnBxB,EAAcW,OAAS,IACtBO,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEE,UAAW,OAAQC,YAAa,QAAST,SACnDjB,EAAc2B,IAAI,CAACC,EAAMC,KACxBX,EAAAA,EAAAA,KAAA,MAAYK,MAAO,CAAEO,SAAU,SAAUC,MAAO,QAASd,SACtDW,EAAKI,MADCH,QAQrB,C,uDC5De,SAASI,EAAKxC,GAAuC,IAAtC,QAAEyC,EAAO,KAAEf,EAAO,OAAM,QAAEgB,GAAS1C,EAC/D,OACEU,EAAAA,EAAAA,MAAA,OAAKC,UAAW,eAAee,IAAQiB,KAAK,QAAQ,YAAU,YAAYb,MAAOc,EAAUpB,SAAA,EACzFC,EAAAA,EAAAA,KAAA,QAAMK,MAAOe,EAAKrB,SAAEiB,KACpBhB,EAAAA,EAAAA,KAAA,UACEL,QAASsB,EACTZ,MAAOgB,EACP,aAAW,uBAAsBtB,SAClC,WAKP,CAGA,MAAMoB,EAAY,CAChBb,QAAS,OACTgB,eAAgB,gBAChBC,WAAY,SACZC,QAAS,YACTC,aAAc,MACdC,UAAW,6BACXC,gBAAiB,UACjBf,SAAU,UACVC,MAAO,OACPe,IAAK,OACLC,WAAY,qCAGRT,EAAO,CACXU,KAAM,GAGFT,EAAW,CACfU,WAAY,cACZC,OAAQ,OACRpB,SAAU,SACVqB,OAAQ,UACRpB,MAAO,O,oGCrCM,SAASqB,IACtB,MAAO7C,EAAO8C,IAAYnD,EAAAA,EAAAA,UAAS,KAC5BoD,EAAeC,IAAoBrD,EAAAA,EAAAA,UAAS,KAC5CsD,EAAcC,IAAmBvD,EAAAA,EAAAA,UAAS,QAC1CwD,EAAOC,IAAYzD,EAAAA,EAAAA,UAAS,MAE7B0D,EAAY,SAACC,GACjBF,EAAS,CAAEzB,QAAS2B,EAAK1C,KADC2C,UAAAnD,OAAA,QAAAoD,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAE7BE,WAAW,IAAML,EAAS,MAAO,IACnC,EAuCA,OACExD,EAAAA,EAAAA,MAAC8D,EAAAA,EAAe,CAACC,MAAM,gCAAqBjD,SAAA,EAC1CC,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACvE,OAAO,aAAaF,OAAS0E,GAAUf,EAASe,GAAQvE,UAAQ,KAG1EM,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEE,UAAW,OAAQK,SAAU,UAAWuC,WAAY,MAAOtC,MAAO,QAASd,SAAA,EACvFC,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEO,SAAU,UAAWb,SAAC,+BACnCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6JAIHd,EAAAA,EAAAA,MAAA,MAAIoB,MAAO,CAAEG,YAAa,QAAST,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2EACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6EACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iFAIPV,EAAMI,OAAS,IACdR,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAArD,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEE,UAAW,QAASR,UAChCd,EAAAA,EAAAA,MAAA,SAAAc,SAAA,CAAO,iBACU,KACfd,EAAAA,EAAAA,MAAA,UACEoE,MAAOf,EACPnC,SAAWhB,GAAMoD,EAAgBpD,EAAEiB,OAAOiD,OAC1ChD,MAAO,CAAEmB,QAAS,WAAYZ,SAAU,WAAYb,SAAA,EAEpDC,EAAAA,EAAAA,KAAA,UAAQqD,MAAM,MAAKtD,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQqD,MAAM,MAAKtD,SAAC,iBAK1BC,EAAAA,EAAAA,KAAA,UACEL,QAxEY2D,KACpB,GAAqB,IAAjBjE,EAAMI,OAAc,OAAOiD,EAAU,+BAAgC,SACzE,IAAK,CAAC,MAAO,OAAOa,SAASjB,GAAe,OAAOI,EAAU,sBAAuB,SAEpF,MAAMc,EAAY,GAElBnE,EAAMoE,QAAQ,CAAC/C,EAAMgD,KACnB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,KACd,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAML,EAAOM,OACjBH,EAAID,OAAS,KACX,MAAMK,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAQP,EAAIO,MACnBH,EAAOI,OAASR,EAAIQ,OAERJ,EAAOK,WAAW,MAC1BC,UAAUV,EAAK,EAAG,GAEtBI,EAAOO,OACJC,IACC,MAAMC,EAAMC,IAAIC,gBAAgBH,GAChClB,EAAUsB,KAAKH,GACXnB,EAAU/D,SAAWJ,EAAMI,SAC7B4C,EAAiBmB,GACjBd,EAAU,aAAac,EAAU/D,sBAAsB6C,EAAayC,gBAAiB,aAGzF,SAASzC,IACT,KAINqB,EAAOqB,cAActE,MAwCfL,MAAO,CACLE,UAAW,OACXiB,QAAS,YACTG,gBAAiB,UACjBd,MAAO,QACPmB,OAAQ,OACRP,aAAc,MACdQ,OAAQ,WACRlC,SACH,mBAMJqC,EAAc3C,OAAS,IACtBR,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEE,UAAW,OAAQ0E,UAAW,UAAWlF,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wCACHqC,EAAc3B,IAAI,CAACkE,EAAKhE,KACvB1B,EAAAA,EAAAA,MAAA,OAAaoB,MAAO,CAAE6E,aAAc,QAASnF,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAKgE,IAAKW,EAAKQ,IAAK,aAAaxE,IAAKN,MAAO,CAAE+E,SAAU,WACzDpF,EAAAA,EAAAA,KAAA,KAAGqF,KAAMV,EAAKW,SAAU,aAAa3E,KAAK2B,IAAevC,UACvDC,EAAAA,EAAAA,KAAA,UACEK,MAAO,CACLE,UAAW,OACXiB,QAAS,WACTG,gBAAiB,UACjBd,MAAO,QACPmB,OAAQ,OACRP,aAAc,MACdQ,OAAQ,WACRlC,SACH,8BAbKY,OAsBf6B,IAASxC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,QAASwB,EAAMxB,QAASf,KAAMuC,EAAMvC,KAAMgB,QAASA,IAAMwB,EAAS,UAGzF,C","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/imagetools/ConvertFromJPG.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function ConvertFromJPG() {\r\n  const [files, setFiles] = useState([]);\r\n  const [convertedURLs, setConvertedURLs] = useState([]);\r\n  const [targetFormat, setTargetFormat] = useState('png');\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleConvert = () => {\r\n    if (files.length === 0) return showToast('Upload JPG files to convert.', 'error');\r\n    if (!['png', 'gif'].includes(targetFormat)) return showToast('Unsupported format.', 'error');\r\n\r\n    const converted = [];\r\n\r\n    files.forEach((file, index) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const img = new Image();\r\n        img.src = reader.result;\r\n        img.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n\r\n          const ctx = canvas.getContext('2d');\r\n          ctx.drawImage(img, 0, 0);\r\n\r\n          canvas.toBlob(\r\n            (blob) => {\r\n              const url = URL.createObjectURL(blob);\r\n              converted.push(url);\r\n              if (converted.length === files.length) {\r\n                setConvertedURLs(converted);\r\n                showToast(`Converted ${converted.length} image(s) to ${targetFormat.toUpperCase()}`, 'success');\r\n              }\r\n            },\r\n            `image/${targetFormat}`,\r\n            1\r\n          );\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üåÄ Convert from JPG\">\r\n      <DropZone accept=\"image/jpeg\" onDrop={(fList) => setFiles(fList)} multiple />\r\n\r\n      {/* üìò Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Convert JPG to PNG or GIF</h2>\r\n        <p>\r\n          Instantly convert JPG files into PNG or GIF format. Works entirely offline ‚Äî just drag,\r\n          drop, and export. Animated GIF output support coming soon!\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>üîÑ Transform JPGs with solid background to transparent PNGs</li>\r\n          <li>üéûÔ∏è Upload multiple JPGs to generate frame-by-frame GIFs</li>\r\n          <li>üîí Private & browser-based ‚Äî nothing leaves your device</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {files.length > 0 && (\r\n        <>\r\n          <div style={{ marginTop: '20px' }}>\r\n            <label>\r\n              Output Format:{' '}\r\n              <select\r\n                value={targetFormat}\r\n                onChange={(e) => setTargetFormat(e.target.value)}\r\n                style={{ padding: '6px 10px', fontSize: '0.95rem' }}\r\n              >\r\n                <option value=\"png\">PNG</option>\r\n                <option value=\"gif\">GIF</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleConvert}\r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#3f51b5',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Convert JPG\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {convertedURLs.length > 0 && (\r\n        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n          <h4>üñºÔ∏è Converted Output</h4>\r\n          {convertedURLs.map((url, i) => (\r\n            <div key={i} style={{ marginBottom: '20px' }}>\r\n              <img src={url} alt={`Converted ${i}`} style={{ maxWidth: '100%' }} />\r\n              <a href={url} download={`converted-${i}.${targetFormat}`}>\r\n                <button\r\n                  style={{\r\n                    marginTop: '10px',\r\n                    padding: '8px 14px',\r\n                    backgroundColor: '#4caf50',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  ‚¨á Download Image\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","ConvertFromJPG","setFiles","convertedURLs","setConvertedURLs","targetFormat","setTargetFormat","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","fList","lineHeight","_Fragment","value","handleConvert","includes","converted","forEach","index","reader","FileReader","onload","img","Image","src","result","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","push","toUpperCase","readAsDataURL","textAlign","marginBottom","alt","maxWidth","href","download"],"sourceRoot":""}