{"version":3,"file":"static/js/5589.a32ee69b.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/imagetools/CompressImage.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function CompressImage() {\r\n  const [file, setFile] = useState(null);\r\n  const [compressedURL, setCompressedURL] = useState('');\r\n  const [quality, setQuality] = useState(0.7); // JPEG compression (0 to 1)\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleCompress = () => {\r\n    if (!file) return showToast('Upload an image to compress.', 'error');\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const img = new Image();\r\n      img.src = reader.result;\r\n\r\n      img.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        canvas.toBlob((blob) => {\r\n          const url = URL.createObjectURL(blob);\r\n          setCompressedURL(url);\r\n          showToast('Image compressed successfully!', 'success');\r\n        }, 'image/jpeg', quality);\r\n      };\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üìâ Compress Image\">\r\n      <DropZone accept=\"image/*\" onDrop={(f) => setFile(f)} />\r\n\r\n      {/* üìò Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Compress JPG, PNG, SVG, GIF Easily</h2>\r\n        <p>\r\n          Reduce image file sizes with browser-based compression. Adjust JPEG quality manually and save space without sacrificing visuals ‚Äî ideal for uploads, web optimization, and faster sharing.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>üñºÔ∏è Compress images directly in your browser</li>\r\n          <li>üì¶ Ideal for web apps, portfolios, and uploads</li>\r\n          <li>üîí Offline and private ‚Äî uses HTML5 canvas API</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* üîß Quality Control & Action */}\r\n      {file && (\r\n        <>\r\n          <div style={{ marginTop: '20px' }}>\r\n            <label>\r\n              JPEG Quality: {quality}\r\n              <input\r\n                type=\"range\"\r\n                min=\"0.1\"\r\n                max=\"1\"\r\n                step=\"0.05\"\r\n                value={quality}\r\n                onChange={(e) => setQuality(parseFloat(e.target.value))}\r\n                style={{ width: '100%' }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleCompress}\r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#3f51b5',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Compress Image\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {compressedURL && (\r\n        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n          <img src={compressedURL} alt=\"Compressed Preview\" style={{ maxWidth: '100%' }} />\r\n          <a href={compressedURL} download=\"compressed.jpg\">\r\n            <button\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '10px 16px',\r\n                backgroundColor: '#4caf50',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              ‚¨á Download Compressed Image\r\n            </button>\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","CompressImage","setFile","compressedURL","setCompressedURL","quality","setQuality","toast","setToast","showToast","msg","message","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","f","lineHeight","_Fragment","min","max","step","value","parseFloat","width","handleCompress","reader","FileReader","onload","img","Image","src","result","canvas","document","createElement","height","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","readAsDataURL","padding","backgroundColor","border","borderRadius","cursor","textAlign","alt","maxWidth","href","download","Toast","onClose","role","container","text","closeBtn","justifyContent","alignItems","boxShadow","gap","fontFamily","flex","background"],"sourceRoot":""}