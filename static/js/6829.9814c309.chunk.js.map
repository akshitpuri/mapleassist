{"version":3,"file":"static/js/6829.9814c309.chunk.js","mappings":"kJAiEA,QA9DA,SAAiBA,GAA+D,IAA9D,OAAEC,EAAM,gBAAEC,EAAe,OAAEC,EAAS,IAAG,SAAEC,GAAW,GAAOJ,EAC3E,MAAMK,GAAWC,EAAAA,EAAAA,WACVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IA+BnD,OACEC,EAAAA,EAAAA,MAAA,OACEC,UAAU,WACVV,OAhCgBW,IAClBA,EAAEC,iBACF,MAAMC,EAAQC,MAAMC,KAAKJ,EAAEK,aAAaH,OACnB,IAAjBA,EAAMI,SAEVV,EAAiBM,GAEbV,GAAYF,EACdA,EAAgBY,GACPb,GACTA,EAAOa,EAAM,MAuBbK,WAAaP,GAAMA,EAAEC,iBACrBO,QApBgBC,IAAMhB,EAASiB,QAAQC,QAoBlBC,SAAA,EAErBd,EAAAA,EAAAA,MAAA,KAAAc,SAAA,CAAG,mBAAiBpB,EAAW,IAAM,GAAG,2BACxCqB,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,IAAKtB,EACLF,OAAQA,EACRC,SAAUA,EACVwB,SA1BgBhB,IACpB,MAAME,EAAQC,MAAMC,KAAKJ,EAAEiB,OAAOf,OACb,IAAjBA,EAAMI,SAEVV,EAAiBM,GAEbV,GAAYF,EACdA,EAAgBY,GACPb,GACTA,EAAOa,EAAM,MAkBXgB,MAAO,CAAEC,QAAS,UAEnBxB,EAAcW,OAAS,IACtBO,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEE,UAAW,OAAQC,YAAa,QAAST,SACnDjB,EAAc2B,IAAI,CAACC,EAAMC,KACxBX,EAAAA,EAAAA,KAAA,MAAYK,MAAO,CAAEO,SAAU,SAAUC,MAAO,QAASd,SACtDW,EAAKI,MADCH,QAQrB,C,uDC5De,SAASI,EAAKxC,GAAuC,IAAtC,QAAEyC,EAAO,KAAEf,EAAO,OAAM,QAAEgB,GAAS1C,EAC/D,OACEU,EAAAA,EAAAA,MAAA,OAAKC,UAAW,eAAee,IAAQiB,KAAK,QAAQ,YAAU,YAAYb,MAAOc,EAAUpB,SAAA,EACzFC,EAAAA,EAAAA,KAAA,QAAMK,MAAOe,EAAKrB,SAAEiB,KACpBhB,EAAAA,EAAAA,KAAA,UACEL,QAASsB,EACTZ,MAAOgB,EACP,aAAW,uBAAsBtB,SAClC,WAKP,CAGA,MAAMoB,EAAY,CAChBb,QAAS,OACTgB,eAAgB,gBAChBC,WAAY,SACZC,QAAS,YACTC,aAAc,MACdC,UAAW,6BACXC,gBAAiB,UACjBf,SAAU,UACVC,MAAO,OACPe,IAAK,OACLC,WAAY,qCAGRT,EAAO,CACXU,KAAM,GAGFT,EAAW,CACfU,WAAY,cACZC,OAAQ,OACRpB,SAAU,SACVqB,OAAQ,UACRpB,MAAO,O,8GCnCM,SAASqB,IACtB,MAAOC,EAASC,IAAcpD,EAAAA,EAAAA,UAAS,OAChCqD,EAAQC,IAAatD,EAAAA,EAAAA,UAAS,KAC9BuD,EAAOC,IAAYxD,EAAAA,EAAAA,UAAS,MAC7ByD,GAAY5D,EAAAA,EAAAA,QAAO,MACnB6D,GAAU7D,EAAAA,EAAAA,SAAO,GAEjB8D,EAAY,SAACC,GACjBJ,EAAS,CAAExB,QAAS4B,EAAK3C,KADC4C,UAAApD,OAAA,QAAAqD,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAE7BE,WAAW,IAAMP,EAAS,MAAO,IACnC,EAkBMQ,EAAUA,KACdN,EAAQ7C,SAAU,GAoCpB,OACEZ,EAAAA,EAAAA,MAACgE,EAAAA,EAAe,CAACC,MAAM,2CAA4BC,gBAAc,EAAApD,SAAA,EAE/DC,EAAAA,EAAAA,KAACoD,EAAAA,EAAQ,CAACzE,UAAU,EAAOD,OAAO,OAAOD,gBAAkBY,GAAU+C,EAAW/C,EAAM,OAEtFW,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEE,UAAW,QAASR,SAAC,6CAClCC,EAAAA,EAAAA,KAAA,UACEE,IAAKuC,EACLY,MAAO,IACPC,OAAQ,IACRjD,MAAO,CACL2B,OAAQ,iBACRP,aAAc,MACdlB,UAAW,OACX0B,OAAQ,aAEVsB,YArEapE,IACjBuD,EAAQ7C,SAAU,EAClB,MAAM2D,EAAMf,EAAU5C,QAAQ4D,WAAW,MACzCD,EAAIE,YACJF,EAAIG,OAAOxE,EAAEyE,YAAYC,QAAS1E,EAAEyE,YAAYE,UAkE5CC,YA/DQ5E,IACZ,IAAKuD,EAAQ7C,QAAS,OACtB,MAAM2D,EAAMf,EAAU5C,QAAQ4D,WAAW,MACzCD,EAAIQ,OAAO7E,EAAEyE,YAAYC,QAAS1E,EAAEyE,YAAYE,SAChDN,EAAIS,YAAc,OAClBT,EAAIU,UAAY,EAChBV,EAAIW,UA0DAC,UAAWpB,EACXqB,aAAcrB,KAGhB/D,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEE,UAAW,OAAQD,QAAS,OAAQsB,IAAK,QAAS7B,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,UAAQL,QAxDS2E,KACrB,MAAMC,EAAS9B,EAAU5C,QACzB,GAAI0E,EAAQ,CACEA,EAAOd,WAAW,MAC1Be,UAAU,EAAG,EAAGD,EAAOlB,MAAOkB,EAAOjB,OAC3C,GAmDqCjD,MAAO,CACtCmB,QAAS,WACTG,gBAAiB,UACjBd,MAAO,QACPmB,OAAQ,OACRP,aAAc,MACdQ,OAAQ,WACRlC,SAAC,qBAGHC,EAAAA,EAAAA,KAAA,UAAQL,QA1DS8E,UACrB,IAAKtC,EAAS,OAAOQ,EAAU,qBAAsB,SACrD,MAAM,YAAE+B,SAAsB,+BACxBC,QAAiBxC,EAAQyC,cACzBC,QAAYH,EAAYI,KAAKH,GAC7BI,EAAOF,EAAIG,WAAW,IACtB,MAAE3B,GAAU0B,EAAKE,UAEjBC,EAAMzC,EAAU5C,QAAQsF,UAAU,aAClCC,QAAuBP,EAAIQ,SAASH,GAE1CH,EAAKO,UAAUF,EAAgB,CAC7BG,EAAGlC,EAAQ,IACXmC,EAAG,GACHnC,MAAO,IACPC,OAAQ,KAGV,MAAMmC,QAAcZ,EAAIa,OAClBC,EAAO,IAAIC,KAAK,CAACH,GAAQ,CAAExF,KAAM,oBACjC4F,EAAMC,IAAIC,gBAAgBJ,GAChCrD,EAAU,CAAC,CAAExB,KAAM,GAAGqB,EAAQrB,KAAKkF,QAAQ,OAAQ,iBAAkBH,MAAKF,UAC1EhD,EAAU,qBAAsB,YAoCKtC,MAAO,CACtCmB,QAAS,WACTG,gBAAiB,UACjBd,MAAO,QACPmB,OAAQ,OACRP,aAAc,MACdQ,OAAQ,WACRlC,SAAC,qBAMLd,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEE,UAAW,OAAQM,MAAO,OAAQD,SAAU,UAAWqF,WAAY,OAAQlG,SAAA,EACvFC,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEO,SAAU,UAAWb,SAAC,sCACnCd,EAAAA,EAAAA,MAAA,KAAAc,SAAA,CAAG,0IACqIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,QAEhKd,EAAAA,EAAAA,MAAA,MAAIoB,MAAO,CAAEG,YAAa,QAAST,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+DACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+EAIPsC,EAAO5C,OAAS,IACfO,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEE,UAAW,OAAQD,QAAS,OAAQsB,IAAK,OAAQsE,SAAU,QAASnG,SAC/EsC,EAAO5B,IAAI,CAAAlC,EAAgBoC,KAAC,IAAhB,KAAEG,EAAI,IAAE+E,GAAKtH,EAAA,OACxBU,EAAAA,EAAAA,MAAA,OAAaoB,MAAO,CAAE8F,UAAW,UAAWpG,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEO,SAAU,UAAWb,SAAEe,KACnCd,EAAAA,EAAAA,KAAA,KAAGoG,KAAMP,EAAKQ,SAAUvF,EAAKf,UAC3BC,EAAAA,EAAAA,KAAA,UAAQK,MAAO,CACbE,UAAW,MACXiB,QAAS,WACTG,gBAAiB,UACjBd,MAAO,QACPmB,OAAQ,OACRP,aAAc,MACdQ,OAAQ,WACRlC,SAAC,iBAXGY,OAoBf4B,IAASvC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,QAASuB,EAAMvB,QAASf,KAAMsC,EAAMtC,KAAMgB,QAASA,IAAMuB,EAAS,UAGzF,C","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/pdftools/DrawSignature.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","// components/filetools/pdftools/DrawSignature.js\r\nimport React, { useState, useRef } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\nimport BackButton from '../../BackButton';\r\n\r\nexport default function DrawSignature() {\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [result, setResult] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const drawing = useRef(false);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const startDraw = (e) => {\r\n    drawing.current = true;\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.beginPath();\r\n    ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!drawing.current) return;\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n    ctx.strokeStyle = '#000';\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n  };\r\n\r\n  const endDraw = () => {\r\n    drawing.current = false;\r\n  };\r\n\r\n  const clearSignature = () => {\r\n    const canvas = canvasRef.current;\r\n    if (canvas) {\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n  };\r\n\r\n  const applySignature = async () => {\r\n    if (!pdfFile) return showToast('Upload a PDF first', 'error');\r\n    const { PDFDocument } = await import('pdf-lib');\r\n    const pdfBytes = await pdfFile.arrayBuffer();\r\n    const doc = await PDFDocument.load(pdfBytes);\r\n    const page = doc.getPages()[0];\r\n    const { width } = page.getSize();\r\n\r\n    const png = canvasRef.current.toDataURL('image/png');\r\n    const signatureImage = await doc.embedPng(png);\r\n\r\n    page.drawImage(signatureImage, {\r\n      x: width - 180,\r\n      y: 50,\r\n      width: 150,\r\n      height: 60\r\n    });\r\n\r\n    const final = await doc.save();\r\n    const blob = new Blob([final], { type: 'application/pdf' });\r\n    const url = URL.createObjectURL(blob);\r\n    setResult([{ name: `${pdfFile.name.replace('.pdf', '')}_signed.pdf`, url, blob }]);\r\n    showToast('Signature applied!', 'success');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"🖋️ Draw Signature on PDF\" showBackButton>\r\n     \r\n      <DropZone multiple={false} accept=\".pdf\" onMultipleFiles={(files) => setPdfFile(files[0])} />\r\n\r\n      <h3 style={{ marginTop: '30px' }}>✏️ Draw your signature below:</h3>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={300}\r\n        height={100}\r\n        style={{\r\n          border: '1px solid #ccc',\r\n          borderRadius: '6px',\r\n          marginTop: '10px',\r\n          cursor: 'crosshair'\r\n        }}\r\n        onMouseDown={startDraw}\r\n        onMouseMove={draw}\r\n        onMouseUp={endDraw}\r\n        onMouseLeave={endDraw}\r\n      />\r\n\r\n      <div style={{ marginTop: '16px', display: 'flex', gap: '12px' }}>\r\n        <button onClick={clearSignature} style={{\r\n          padding: '8px 14px',\r\n          backgroundColor: '#e53935',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '6px',\r\n          cursor: 'pointer'\r\n        }}>\r\n          Clear Signature\r\n        </button>\r\n        <button onClick={applySignature} style={{\r\n          padding: '8px 14px',\r\n          backgroundColor: '#3f51b5',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '6px',\r\n          cursor: 'pointer'\r\n        }}>\r\n          Apply to PDF\r\n        </button>\r\n      </div>\r\n\r\n      {/* 🔍 SEO guidance block */}\r\n      <div style={{ marginTop: '30px', color: '#444', fontSize: '0.95rem', lineHeight: '1.6' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Draw and Embed Signatures on PDF</h2>\r\n        <p>\r\n          Use your mouse or stylus to sketch a signature and embed it into the first page of your PDF. This runs entirely in your browser using <strong>pdf-lib</strong>.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>🖋️ Simple sketch pad for handwritten signature</li>\r\n          <li>📄 Automatically placed at bottom-right of page</li>\r\n          <li>🔐 Secure & offline — no file ever leaves your device</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {result.length > 0 && (\r\n        <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n          {result.map(({ name, url }, i) => (\r\n            <div key={i} style={{ textAlign: 'center' }}>\r\n              <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n              <a href={url} download={name}>\r\n                <button style={{\r\n                  marginTop: '8px',\r\n                  padding: '6px 12px',\r\n                  backgroundColor: '#4caf50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                  Download\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","DrawSignature","pdfFile","setPdfFile","result","setResult","toast","setToast","canvasRef","drawing","showToast","msg","arguments","undefined","setTimeout","endDraw","FileToolsLayout","title","showBackButton","DropZone","width","height","onMouseDown","ctx","getContext","beginPath","moveTo","nativeEvent","offsetX","offsetY","onMouseMove","lineTo","strokeStyle","lineWidth","stroke","onMouseUp","onMouseLeave","clearSignature","canvas","clearRect","async","PDFDocument","pdfBytes","arrayBuffer","doc","load","page","getPages","getSize","png","toDataURL","signatureImage","embedPng","drawImage","x","y","final","save","blob","Blob","url","URL","createObjectURL","replace","lineHeight","flexWrap","textAlign","href","download"],"sourceRoot":""}