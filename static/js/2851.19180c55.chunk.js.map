{"version":3,"file":"static/js/2851.19180c55.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/imagetools/CropImage.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState, useRef } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function CropImage() {\r\n  const [file, setFile] = useState(null);\r\n  const [sourceURL, setSourceURL] = useState('');\r\n  const [croppedURL, setCroppedURL] = useState('');\r\n  const [toast, setToast] = useState(null);\r\n  const imgRef = useRef(null);\r\n\r\n  const [crop, setCrop] = useState({ x: 0, y: 0, width: 200, height: 200 });\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleCrop = () => {\r\n    if (!imgRef.current) return showToast('Image not loaded yet.', 'error');\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      imgRef.current,\r\n      crop.x,\r\n      crop.y,\r\n      crop.width,\r\n      crop.height,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    canvas.toBlob((blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      setCroppedURL(url);\r\n      showToast('Image cropped successfully!', 'success');\r\n    }, 'image/png');\r\n  };\r\n\r\n  const handleDrop = (f) => {\r\n    setFile(f);\r\n    setCroppedURL('');\r\n    const reader = new FileReader();\r\n    reader.onload = () => setSourceURL(reader.result);\r\n    reader.readAsDataURL(f);\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"‚úÇÔ∏è Crop Image\">\r\n      <DropZone accept=\"image/*\" onDrop={handleDrop} />\r\n\r\n      {/* üìò Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Crop JPG, PNG or GIF Images</h2>\r\n        <p>\r\n          Define your crop area using pixel coordinates or visual preview. This lightweight tool\r\n          uses the canvas API for instant browser-side cropping.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>üìê Input pixel values for x, y, width, and height</li>\r\n          <li>üîé Real-time crop preview available</li>\r\n          <li>üîí Private ‚Äî no uploads or server processing</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {sourceURL && (\r\n        <>\r\n          <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n            <img\r\n              ref={imgRef}\r\n              src={sourceURL}\r\n              alt=\"Original\"\r\n              style={{\r\n                maxWidth: '100%',\r\n                border: '1px solid #ccc',\r\n                padding: '10px',\r\n                background: '#fafafa'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: '20px', display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\r\n            <label>\r\n              X:{' '}\r\n              <input\r\n                type=\"number\"\r\n                value={crop.x}\r\n                onChange={(e) => setCrop({ ...crop, x: parseInt(e.target.value) })}\r\n              />\r\n            </label>\r\n            <label>\r\n              Y:{' '}\r\n              <input\r\n                type=\"number\"\r\n                value={crop.y}\r\n                onChange={(e) => setCrop({ ...crop, y: parseInt(e.target.value) })}\r\n              />\r\n            </label>\r\n            <label>\r\n              Width:{' '}\r\n              <input\r\n                type=\"number\"\r\n                value={crop.width}\r\n                onChange={(e) => setCrop({ ...crop, width: parseInt(e.target.value) })}\r\n              />\r\n            </label>\r\n            <label>\r\n              Height:{' '}\r\n              <input\r\n                type=\"number\"\r\n                value={crop.height}\r\n                onChange={(e) => setCrop({ ...crop, height: parseInt(e.target.value) })}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleCrop}\r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#3f51b5',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Crop Image\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {croppedURL && (\r\n        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n          <img src={croppedURL} alt=\"Cropped preview\" style={{ maxWidth: '100%' }} />\r\n          <a href={croppedURL} download=\"cropped.png\">\r\n            <button\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '10px 16px',\r\n                backgroundColor: '#4caf50',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              ‚¨á Download Cropped Image\r\n            </button>\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","CropImage","setFile","sourceURL","setSourceURL","croppedURL","setCroppedURL","toast","setToast","imgRef","crop","setCrop","x","y","width","height","showToast","msg","message","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","f","reader","FileReader","onload","result","readAsDataURL","lineHeight","_Fragment","textAlign","src","alt","maxWidth","border","padding","background","gap","flexWrap","value","parseInt","handleCrop","canvas","document","createElement","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","backgroundColor","borderRadius","cursor","href","download","Toast","onClose","role","container","text","closeBtn","justifyContent","alignItems","boxShadow","fontFamily","flex"],"sourceRoot":""}