{"version":3,"file":"static/js/9369.c6f33ad5.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/pdftools/FlattenPDF.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\n\r\nimport Toast from '../../Toast';\r\n\r\nexport default function FlattenPDF() {\r\n  const [files, setFiles] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const flatten = async () => {\r\n    if (!files.length) return showToast('Upload a PDF to flatten', 'error');\r\n    const { PDFDocument } = await import('pdf-lib');\r\n\r\n    const output = [];\r\n    for (const file of files) {\r\n      try {\r\n        const bytes = await file.arrayBuffer();\r\n        const original = await PDFDocument.load(bytes);\r\n        const flat = await PDFDocument.create();\r\n\r\n        const pages = await flat.copyPages(original, original.getPageIndices());\r\n        pages.forEach((page) => flat.addPage(page));\r\n\r\n        const final = await flat.save();\r\n        const blob = new Blob([final], { type: 'application/pdf' });\r\n        const url = URL.createObjectURL(blob);\r\n        output.push({\r\n          name: `${file.name.replace('.pdf', '')}_flattened.pdf`,\r\n          url,\r\n          blob\r\n        });\r\n      } catch {\r\n        showToast(`Failed to flatten ${file.name}`, 'error');\r\n      }\r\n    }\r\n\r\n    setResult(output);\r\n    showToast('PDFs flattened successfully!', 'success');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üßæ Flatten PDF Layers\" showBackButton>\r\n      \r\n      <DropZone multiple accept=\".pdf\" onMultipleFiles={setFiles} />\r\n\r\n      <button onClick={flatten} style={{\r\n        marginTop: '20px',\r\n        padding: '10px 16px',\r\n        backgroundColor: '#3f51b5',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '6px',\r\n        cursor: 'pointer'\r\n      }}>\r\n        Flatten PDF Layers\r\n      </button>\r\n\r\n      {/* üîç SEO guidance block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Convert Interactive PDFs into Static Layers</h2>\r\n        <p>\r\n          Flatten your PDF files to remove editable layers like forms or annotations, producing a clean visual-only version ideal for printing, archiving, and sharing. This tool runs 100% offline using <strong>pdf-lib</strong>.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>üßæ Locks layout while discarding form fields</li>\r\n          <li>üßπ Converts interactive content to visual-only pages</li>\r\n          <li>üîê Private and secure ‚Äî runs entirely in browser</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {result.length > 0 && (\r\n        <div style={{ marginTop: '30px', display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n          {result.map(({ name, url }, i) => (\r\n            <div key={i} style={{ textAlign: 'center' }}>\r\n              <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n              <a href={url} download={name}>\r\n                <button style={{\r\n                  marginTop: '8px',\r\n                  padding: '6px 12px',\r\n                  backgroundColor: '#4caf50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                  Download\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","FlattenPDF","setFiles","result","setResult","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","showBackButton","DropZone","async","PDFDocument","output","bytes","arrayBuffer","original","load","flat","create","copyPages","getPageIndices","forEach","page","addPage","final","save","blob","Blob","url","URL","createObjectURL","push","replace","lineHeight","flexWrap","textAlign","href","download"],"sourceRoot":""}