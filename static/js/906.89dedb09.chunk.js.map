{"version":3,"file":"static/js/906.89dedb09.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/imagetools/BlurFace.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nexport default function BlurFace() {\r\n  const [file, setFile] = useState(null);\r\n  const [outputURL, setOutputURL] = useState('');\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load models once\r\n    const loadModels = async () => {\r\n      const MODEL_URL = '/models'; // Place models in public/models\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const blurFaces = async () => {\r\n    if (!file) return showToast('Upload an image to blur faces.', 'error');\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async () => {\r\n      const img = new Image();\r\n      img.src = reader.result;\r\n      await img.decode();\r\n\r\n      const detections = await faceapi.detectAllFaces(img, new faceapi.TinyFaceDetectorOptions());\r\n\r\n      if (!detections.length) {\r\n        showToast('No faces detected.', 'warning');\r\n        return;\r\n      }\r\n\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(img, 0, 0);\r\n\r\n      ctx.filter = 'blur(12px)';\r\n      detections.forEach(({ box }) => {\r\n        const { x, y, width, height } = box;\r\n        ctx.drawImage(canvas, x, y, width, height, x, y, width, height);\r\n      });\r\n\r\n      canvas.toBlob((blob) => {\r\n        const url = URL.createObjectURL(blob);\r\n        setOutputURL(url);\r\n        showToast(`Blurred ${detections.length} face(s)`, 'success');\r\n      }, 'image/png');\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üôà Blur Face\">\r\n      <DropZone accept=\"image/*\" onDrop={(f) => setFile(f)} />\r\n\r\n      {/* üìò Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Blur Detected Faces for Privacy</h2>\r\n        <p>\r\n          This tool uses <strong>face-api.js</strong> to detect faces and automatically blur them\r\n          using a canvas overlay. Ideal for screenshots, shared images, and anonymized content.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>üîç Detect faces with TinyFaceDetector</li>\r\n          <li>üß† Blur using image sampling ‚Äî no uploads or servers</li>\r\n          <li>üîí Keeps people private and compliant</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {file && (\r\n        <button\r\n          onClick={blurFaces}\r\n          style={{\r\n            marginTop: '20px',\r\n            padding: '10px 16px',\r\n            backgroundColor: '#3f51b5',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '6px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Blur Faces\r\n        </button>\r\n      )}\r\n\r\n      {outputURL && (\r\n        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n          <img src={outputURL} alt=\"Blurred preview\" style={{ maxWidth: '100%' }} />\r\n          <a href={outputURL} download=\"blurred.png\">\r\n            <button\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '10px 16px',\r\n                backgroundColor: '#4caf50',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              ‚¨á Download Blurred Image\r\n            </button>\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","BlurFace","setFile","outputURL","setOutputURL","toast","setToast","showToast","msg","message","arguments","undefined","setTimeout","useEffect","async","faceapi","tinyFaceDetector","loadFromUri","loadModels","FileToolsLayout","title","DropZone","f","lineHeight","reader","FileReader","onload","img","Image","src","result","decode","detections","canvas","document","createElement","width","height","ctx","getContext","drawImage","filter","forEach","box","x","y","toBlob","blob","url","URL","createObjectURL","readAsDataURL","padding","backgroundColor","border","borderRadius","cursor","textAlign","alt","maxWidth","href","download","Toast","onClose","role","container","text","closeBtn","justifyContent","alignItems","boxShadow","gap","fontFamily","flex","background"],"sourceRoot":""}