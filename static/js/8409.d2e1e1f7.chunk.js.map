{"version":3,"file":"static/js/8409.d2e1e1f7.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/gifs/CreateGIF.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function CreateGIF() {\r\n  const [images, setImages] = useState([]);\r\n  const [gifURL, setGifURL] = useState('');\r\n  const [duration, setDuration] = useState(500);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const createGIF = async () => {\r\n    if (images.length === 0) return showToast('Upload images first.', 'error');\r\n\r\n    const { GIF } = await import('gif.js.optimized');\r\n\r\n    const gif = new GIF({\r\n      workers: 2,\r\n      quality: 10,\r\n      workerScript: '/gif.worker.js',\r\n    });\r\n\r\n    for (const file of images) {\r\n      const img = new Image();\r\n      img.src = URL.createObjectURL(file);\r\n      await new Promise((res) => (img.onload = res));\r\n      gif.addFrame(img, { delay: duration });\r\n    }\r\n\r\n    gif.on('finished', (blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      setGifURL(url);\r\n      showToast('GIF created successfully!', 'success');\r\n    });\r\n\r\n    gif.render();\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üñºÔ∏è Create GIF from Images\">\r\n      <DropZone multiple accept=\"image/*\" onMultipleFiles={setImages} />\r\n\r\n      {/* üìò SEO Guidance */}\r\n      <div style={{ marginTop: 30, fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Create Animated GIFs in Your Browser</h2>\r\n        <p>\r\n          Upload multiple images to generate a GIF instantly ‚Äî great for memes, previews, tutorials,\r\n          and stories. This tool uses <strong>gif.js</strong> to handle image sequencing offline.\r\n        </p>\r\n        <ul style={{ paddingLeft: 20 }}>\r\n          <li>üñºÔ∏è Supports JPG, PNG, and WebP inputs</li>\r\n          <li>‚è±Ô∏è Adjustable frame delay for animation speed</li>\r\n          <li>üì¶ Export GIF directly and download</li>\r\n          <li>üîí Runs completely offline ‚Äî private and secure</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {images.length > 0 && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <label>\r\n            Frame Duration (ms):{' '}\r\n            <input\r\n              type=\"number\"\r\n              value={duration}\r\n              onChange={(e) => setDuration(Number(e.target.value))}\r\n              style={{ padding: '6px', marginLeft: '8px' }}\r\n            />\r\n          </label>\r\n          <button\r\n            onClick={createGIF}\r\n            style={{\r\n              marginTop: 20,\r\n              padding: '10px 16px',\r\n              backgroundColor: '#3f51b5',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Create GIF\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {gifURL && (\r\n        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n          <img src={gifURL} alt=\"GIF preview\" style={{ maxWidth: '100%' }} />\r\n          <a href={gifURL} download=\"animated.gif\">\r\n            <button\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '10px 16px',\r\n                backgroundColor: '#4caf50',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              ‚¨á Download GIF\r\n            </button>\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","CreateGIF","images","setImages","gifURL","setGifURL","duration","setDuration","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","lineHeight","value","Number","marginLeft","async","GIF","gif","workers","quality","workerScript","img","Image","src","URL","createObjectURL","Promise","res","onload","addFrame","delay","on","blob","url","render","textAlign","alt","maxWidth","href","download"],"sourceRoot":""}