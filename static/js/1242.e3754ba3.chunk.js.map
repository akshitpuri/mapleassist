{"version":3,"file":"static/js/1242.e3754ba3.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/pdftools/InsertBlankPages.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\n\r\nexport default function InsertBlankPages() {\r\n  const [files, setFiles] = useState([]);\r\n  const [position, setPosition] = useState('2');\r\n  const [result, setResult] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const insertBlank = async () => {\r\n    if (files.length === 0) return showToast('Upload a PDF first', 'error');\r\n    const { PDFDocument } = await import('pdf-lib');\r\n\r\n    const output = [];\r\n\r\n    for (const file of files) {\r\n      try {\r\n        const bytes = await file.arrayBuffer();\r\n        const doc = await PDFDocument.load(bytes);\r\n        const blank = doc.addPage(); // create blank page\r\n        doc.removePage(doc.getPageCount() - 1); // remove from end\r\n\r\n        const insertAt = Math.max(0, Math.min(parseInt(position) - 1, doc.getPageCount()));\r\n        doc.insertPage(insertAt, blank);\r\n\r\n        const finalBytes = await doc.save();\r\n        const blob = new Blob([finalBytes], { type: 'application/pdf' });\r\n        const url = URL.createObjectURL(blob);\r\n        output.push({ name: `${file.name.replace('.pdf', '')}_blanked.pdf`, url, blob });\r\n      } catch {\r\n        showToast(`Failed to insert into ${file.name}`, 'error');\r\n      }\r\n    }\r\n\r\n    setResult(output);\r\n    showToast(`Inserted blank page(s) into ${output.length} file(s)`, 'success');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üìÜ Insert Blank Pages into PDF\" showBackButton>\r\n   \r\n      <DropZone multiple accept=\".pdf\" onMultipleFiles={setFiles} />\r\n\r\n      <div style={{ marginTop: '20px', display: 'flex', gap: '14px', alignItems: 'center', flexWrap: 'wrap' }}>\r\n        <label>Insert at page number:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={position}\r\n          onChange={(e) => setPosition(e.target.value)}\r\n          style={{ padding: '8px', width: '100px' }}\r\n        />\r\n        <button\r\n          onClick={insertBlank}\r\n          style={{\r\n            padding: '10px 16px',\r\n            backgroundColor: '#3f51b5',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '6px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Insert Blank Page\r\n        </button>\r\n      </div>\r\n\r\n      {/* SEO-enhanced guidance block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Insert Blank Pages into PDF Documents</h2>\r\n        <p>\r\n          Add blank pages between existing ones or at the end of your PDF ‚Äî perfect for notes, separators, or placeholders.\r\n          This tool uses <strong>pdf-lib</strong> to modify your file entirely in-browser, with no upload required.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>üìÜ Insert at any position ‚Äî before, between, or after</li>\r\n          <li>üìÑ Useful for forms, drafts, or print-ready layouts</li>\r\n          <li>üîê 100% private ‚Äî processed locally</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {result.length > 0 && (\r\n        <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n          {result.map(({ name, url }, i) => (\r\n            <div key={i} style={{ textAlign: 'center' }}>\r\n              <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n              <a href={url} download={name}>\r\n                <button style={{\r\n                  marginTop: '8px',\r\n                  padding: '6px 12px',\r\n                  backgroundColor: '#4caf50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                  Download\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","InsertBlankPages","setFiles","position","setPosition","result","setResult","toast","setToast","showToast","msg","message","arguments","undefined","setTimeout","FileToolsLayout","title","showBackButton","DropZone","gap","alignItems","flexWrap","value","padding","width","async","PDFDocument","output","bytes","arrayBuffer","doc","load","blank","addPage","removePage","getPageCount","insertAt","Math","max","min","parseInt","insertPage","finalBytes","save","blob","Blob","url","URL","createObjectURL","push","replace","backgroundColor","border","borderRadius","cursor","lineHeight","textAlign","href","download","Toast","onClose","role","container","text","closeBtn","justifyContent","boxShadow","fontFamily","flex","background"],"sourceRoot":""}