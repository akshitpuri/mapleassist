{"version":3,"file":"static/js/7178.98a96c23.chunk.js","mappings":"mLAIe,SAASA,IACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,YAC1BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAEjCK,EAAAA,EAAAA,WAAU,KACR,IAAKP,EAAO,OAAOM,EAAQ,IAC3BE,EAAaR,EAAOG,IACnB,CAACH,EAAOG,IAEX,MAAMK,EAAeC,MAAOC,EAAMC,KAChC,IACE,MACMC,GADU,IAAIC,aACCC,OAAOJ,GACtBK,QAAeC,OAAOC,OAAOF,OAAOJ,EAAWC,GAC/CM,EAAMC,MAAMC,KAAK,IAAIC,WAAWN,IACnCO,IAAIC,GAAKA,EAAEC,SAAS,IAAIC,SAAS,EAAG,MACpCC,KAAK,IACRpB,EAAQY,EACV,CAAE,MACAZ,EAAQ,2BACV,GAGF,OACEqB,EAAAA,EAAAA,MAACC,EAAAA,EAAe,CAACC,MAAM,8BAAmBC,SAAA,EACxCH,EAAAA,EAAAA,MAACI,EAAAA,EAAM,CAAAD,SAAA,EACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,kCACPE,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAAQ,mFACjCF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,WAAWC,QAAQ,0EAGhCF,EAAAA,EAAAA,KAAA,MAAIG,MAAOC,EAAQN,SAAC,mCACpBE,EAAAA,EAAAA,KAAA,KAAGG,MAAOE,EAAYP,SAAC,gKAIvBE,EAAAA,EAAAA,KAAA,YACEM,MAAOtC,EACPuC,SAAUC,GAAKvC,EAASuC,EAAEC,OAAOH,OACjCI,YAAY,0BACZC,KAAM,EACNR,MAAOS,KAGTZ,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,OAAOV,MAAOW,EAAMhB,SAAC,uBACpCH,EAAAA,EAAAA,MAAA,UACEoB,GAAG,OACHT,MAAOnC,EACPoC,SAAWC,GAAMpC,EAAQoC,EAAEC,OAAOH,OAClCH,MAAOa,EAASlB,SAAA,EAEhBE,EAAAA,EAAAA,KAAA,UAAQM,MAAM,UAASR,SAAC,aACxBE,EAAAA,EAAAA,KAAA,UAAQM,MAAM,QAAOR,SAAC,aAGvBzB,IACCsB,EAAAA,EAAAA,MAAA,OAAKQ,MAAOc,EAAOnB,SAAA,EACjBH,EAAAA,EAAAA,MAAA,UAAAG,SAAA,CAAS3B,EAAK,OAAU,IAAEE,OAKpC,CAEA,MAAM+B,EAAU,CAAEc,SAAU,SAAUC,aAAc,QAC9Cd,EAAc,CAAEa,SAAU,UAAWE,WAAY,MAAOC,MAAO,OAAQF,aAAc,QACrFP,EAAW,CAAEU,MAAO,OAAQC,QAAS,OAAQL,SAAU,OAAQM,aAAc,MAAOC,OAAQ,iBAAkBN,aAAc,QAC5HL,EAAQ,CAAEY,QAAS,QAASC,WAAY,IAAKR,aAAc,MAAOE,MAAO,QACzEL,EAAW,CAAEO,QAAS,MAAOL,SAAU,OAAQC,aAAc,OAAQK,aAAc,MAAOC,OAAQ,kBAClGR,EAAS,CAAEW,WAAY,UAAWL,QAAS,OAAQL,SAAU,OAAQM,aAAc,MAAOH,MAAO,OAAQQ,WAAY,W","sources":["components/filetools/privacysecuritytools/HashGeneratorTool.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\n\r\nexport default function HashGeneratorTool() {\r\n  const [input, setInput] = useState('');\r\n  const [algo, setAlgo] = useState('SHA-256');\r\n  const [hash, setHash] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!input) return setHash('');\r\n    generateHash(input, algo);\r\n  }, [input, algo]);\r\n\r\n  const generateHash = async (text, algorithm) => {\r\n    try {\r\n      const encoder = new TextEncoder();\r\n      const data = encoder.encode(text);\r\n      const digest = await crypto.subtle.digest(algorithm, data);\r\n      const hex = Array.from(new Uint8Array(digest))\r\n        .map(b => b.toString(16).padStart(2, '0'))\r\n        .join('');\r\n      setHash(hex);\r\n    } catch {\r\n      setHash('Algorithm not supported.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"ðŸ§¬ Hash Generator\">\r\n      <Helmet>\r\n        <title>Hash Generator | MapleAssist</title>\r\n        <meta name=\"description\" content=\"Generate cryptographic hashes (SHA-256, SHA-1) using browser-based WebCrypto.\" />\r\n        <meta name=\"keywords\" content=\"hash generator, sha1, sha256, hashing tool, security, mapleassist\" />\r\n      </Helmet>\r\n\r\n      <h2 style={heading}>Generate Cryptographic Hashes</h2>\r\n      <p style={description}>\r\n        Convert text into secure hash values using SHA-1 or SHA-256. Great for digital signatures, file integrity verification, and password protection workflows.\r\n      </p>\r\n\r\n      <textarea\r\n        value={input}\r\n        onChange={e => setInput(e.target.value)}\r\n        placeholder=\"Enter text or string...\"\r\n        rows={4}\r\n        style={textarea}\r\n      />\r\n\r\n      <label htmlFor=\"algo\" style={label}>Choose Algorithm:</label>\r\n      <select\r\n        id=\"algo\"\r\n        value={algo}\r\n        onChange={(e) => setAlgo(e.target.value)}\r\n        style={dropdown}\r\n      >\r\n        <option value=\"SHA-256\">SHA-256</option>\r\n        <option value=\"SHA-1\">SHA-1</option>\r\n      </select>\r\n\r\n      {hash && (\r\n        <div style={output}>\r\n          <strong>{algo}:</strong> {hash}\r\n        </div>\r\n      )}\r\n    </FileToolsLayout>\r\n  );\r\n}\r\n\r\nconst heading = { fontSize: '1.2rem', marginBottom: '12px' };\r\nconst description = { fontSize: '0.95rem', lineHeight: '1.6', color: '#555', marginBottom: '20px' };\r\nconst textarea = { width: '100%', padding: '10px', fontSize: '1rem', borderRadius: '6px', border: '1px solid #ccc', marginBottom: '14px' };\r\nconst label = { display: 'block', fontWeight: 500, marginBottom: '6px', color: '#444' };\r\nconst dropdown = { padding: '8px', fontSize: '1rem', marginBottom: '20px', borderRadius: '4px', border: '1px solid #ccc' };\r\nconst output = { background: '#f5f5f5', padding: '16px', fontSize: '1rem', borderRadius: '6px', color: '#333', whiteSpace: 'pre-wrap' };"],"names":["HashGeneratorTool","input","setInput","useState","algo","setAlgo","hash","setHash","useEffect","generateHash","async","text","algorithm","data","TextEncoder","encode","digest","crypto","subtle","hex","Array","from","Uint8Array","map","b","toString","padStart","join","_jsxs","FileToolsLayout","title","children","Helmet","_jsx","name","content","style","heading","description","value","onChange","e","target","placeholder","rows","textarea","htmlFor","label","id","dropdown","output","fontSize","marginBottom","lineHeight","color","width","padding","borderRadius","border","display","fontWeight","background","whiteSpace"],"sourceRoot":""}