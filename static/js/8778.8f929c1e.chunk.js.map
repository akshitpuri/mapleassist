{"version":3,"file":"static/js/8778.8f929c1e.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/pdftools/ReorderPages.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\n\r\nimport Toast from '../../Toast';\r\nimport SortableList from 'react-sortablejs';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport 'pdfjs-dist/build/pdf.worker.entry';\r\n\r\nexport default function ReorderPages() {\r\n  const [files, setFiles] = useState([]);\r\n  const [pages, setPages] = useState([]);\r\n  const [orderedIds, setOrderedIds] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const loadPDF = async (incoming = []) => {\r\n    if (!incoming.length) return showToast('No file received', 'error');\r\n    const file = incoming[0];\r\n    const bytes = await file.arrayBuffer();\r\n\r\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n    const doc = await pdfjsLib.getDocument({ data: bytes }).promise;\r\n\r\n    const pageMeta = [];\r\n    for (let i = 1; i <= doc.numPages; i++) {\r\n      const page = await doc.getPage(i);\r\n      const viewport = page.getViewport({ scale: 0.3 });\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = viewport.width;\r\n      canvas.height = viewport.height;\r\n      await page.render({ canvasContext: canvas.getContext('2d'), viewport }).promise;\r\n      const thumb = canvas.toDataURL();\r\n      pageMeta.push({ id: `page-${i}`, label: `Page ${i}`, thumbnail: thumb });\r\n    }\r\n\r\n    setPages(pageMeta);\r\n    setOrderedIds(pageMeta.map(p => p.id));\r\n    setFiles([file]);\r\n    setResult([]);\r\n  };\r\n\r\n  const reorderPDF = async () => {\r\n    if (!files.length || !orderedIds.length) return showToast('Nothing to reorder', 'error');\r\n    const { PDFDocument } = await import('pdf-lib');\r\n    const file = files[0];\r\n    const bytes = await file.arrayBuffer();\r\n    const original = await PDFDocument.load(bytes);\r\n    const newDoc = await PDFDocument.create();\r\n\r\n    const indices = orderedIds.map(id => parseInt(id.split('-')[1]) - 1);\r\n    const copied = await newDoc.copyPages(original, indices);\r\n    copied.forEach(p => newDoc.addPage(p));\r\n\r\n    const final = await newDoc.save();\r\n    const blob = new Blob([final], { type: 'application/pdf' });\r\n    const url = URL.createObjectURL(blob);\r\n    setResult([{ name: `${file.name.replace('.pdf', '')}_reordered.pdf`, url, blob }]);\r\n    showToast('PDF pages reordered!', 'success');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"🧾 Reorder PDF Pages\" showBackButton>\r\n      \r\n      <DropZone multiple={false} accept=\".pdf\" onMultipleFiles={loadPDF} />\r\n\r\n      {orderedIds.length > 0 && (\r\n        <>\r\n          <h3 style={{ marginTop: '30px', fontWeight: 500, color: '#333' }}>\r\n            🧾 Drag pages below to reorder:\r\n          </h3>\r\n\r\n          <SortableList\r\n            tag=\"div\"\r\n            options={{ animation: 150 }}\r\n            onChange={(order) => setOrderedIds(order)}\r\n          >\r\n            {orderedIds.map((id) => {\r\n              const page = pages.find(p => p.id === id);\r\n              return (\r\n                <div\r\n                  key={id}\r\n                  data-id={id}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '12px',\r\n                    padding: '10px',\r\n                    marginBottom: '10px',\r\n                    backgroundColor: '#fff',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '8px',\r\n                    boxShadow: '0 2px 6px rgba(0,0,0,0.06)',\r\n                    cursor: 'grab',\r\n                    userSelect: 'none'\r\n                  }}\r\n                >\r\n                  <img src={page.thumbnail} alt={page.label} style={{ width: '80px', borderRadius: '4px' }} />\r\n                  <span style={{ fontWeight: 500 }}>{page.label}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </SortableList>\r\n\r\n          <button\r\n            onClick={reorderPDF}\r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#3f51b5',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Reorder & Export PDF\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* 🔍 SEO guidance block */}\r\n      <div style={{ marginTop: '30px', color: '#444', fontSize: '0.95rem', lineHeight: '1.6' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Reorder PDF Pages Securely in Your Browser</h2>\r\n        <p>\r\n          Drag and rearrange PDF pages below — preview each as a thumbnail — and export a properly ordered version.\r\n          Runs 100% offline using <strong>pdf-lib</strong> and <strong>pdfjs-dist</strong>, so your files never leave your device.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>📄 Restructure mixed scans, templates, or forms</li>\r\n          <li>🎯 Real-time drag feedback with page previews</li>\r\n          <li>🔐 No uploads — fully private and secure</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {result.length > 0 && (\r\n        <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n          {result.map(({ name, url }, i) => (\r\n            <div key={i} style={{ textAlign: 'center' }}>\r\n              <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n              <a href={url} download={name}>\r\n                <button style={{\r\n                  marginTop: '8px',\r\n                  padding: '6px 12px',\r\n                  backgroundColor: '#4caf50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                  Download\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","ReorderPages","setFiles","pages","setPages","orderedIds","setOrderedIds","result","setResult","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","showBackButton","DropZone","async","incoming","bytes","arrayBuffer","pdfjsLib","workerSrc","doc","data","promise","pageMeta","numPages","page","getPage","viewport","getViewport","scale","canvas","document","createElement","width","height","render","canvasContext","getContext","thumb","toDataURL","push","id","label","thumbnail","p","_Fragment","fontWeight","SortableList","tag","options","animation","order","find","marginBottom","userSelect","src","alt","PDFDocument","original","load","newDoc","create","indices","parseInt","split","copyPages","forEach","addPage","final","save","blob","Blob","url","URL","createObjectURL","replace","lineHeight","flexWrap","textAlign","href","download"],"sourceRoot":""}