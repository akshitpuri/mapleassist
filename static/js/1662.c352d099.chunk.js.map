{"version":3,"file":"static/js/1662.c352d099.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/imagetools/RemoveBackground.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function RemoveBackground() {\r\n  const [file, setFile] = useState(null);\r\n  const [outputURL, setOutputURL] = useState('');\r\n  const [threshold, setThreshold] = useState(250); // brightness threshold\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const removeBg = () => {\r\n    if (!file) return showToast('Upload an image first.', 'error');\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const img = new Image();\r\n      img.src = reader.result;\r\n      img.crossOrigin = 'anonymous';\r\n\r\n      img.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        ctx.drawImage(img, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const { data } = imageData;\r\n\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const r = data[i];\r\n          const g = data[i + 1];\r\n          const b = data[i + 2];\r\n          const brightness = (r + g + b) / 3;\r\n          if (brightness > threshold) {\r\n            data[i + 3] = 0; // make pixel transparent\r\n          }\r\n        }\r\n\r\n        ctx.putImageData(imageData, 0, 0);\r\n        canvas.toBlob((blob) => {\r\n          const url = URL.createObjectURL(blob);\r\n          setOutputURL(url);\r\n          showToast('Background removed (approximate)', 'success');\r\n        }, 'image/png');\r\n      };\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"ðŸ§¹ Remove Background\">\r\n      <DropZone accept=\"image/*\" onDrop={(f) => setFile(f)} />\r\n\r\n      {/* ðŸ“˜ Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Remove Simple Backgrounds</h2>\r\n        <p>\r\n          This browser-based tool uses brightness thresholding to eliminate light-colored\r\n          backgrounds. Ideal for simple shapes, logos, and quick cutouts. For advanced AI removal,\r\n          backend models are needed.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>âš¡ No upload required â€” runs offline</li>\r\n          <li>ðŸŽ¯ Works best on light, solid backgrounds</li>\r\n          <li>ðŸ§  Adjust brightness threshold manually</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {file && (\r\n        <>\r\n          <div style={{ marginTop: '20px' }}>\r\n            <label>\r\n              Brightness Threshold ({threshold}):{' '}\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                value={threshold}\r\n                onChange={(e) => setThreshold(parseInt(e.target.value))}\r\n                style={{ width: '100%' }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={removeBg}\r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#3f51b5',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Remove Background\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {outputURL && (\r\n        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n          <img src={outputURL} alt=\"Background removed\" style={{ maxWidth: '100%' }} />\r\n          <a href={outputURL} download=\"removed-bg.png\">\r\n            <button\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '10px 16px',\r\n                backgroundColor: '#4caf50',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              â¬‡ Download Image\r\n            </button>\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        Ã—\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ðŸŽ¨ Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","RemoveBackground","setFile","outputURL","setOutputURL","threshold","setThreshold","toast","setToast","showToast","msg","message","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","f","lineHeight","_Fragment","min","max","value","parseInt","width","removeBg","reader","FileReader","onload","img","Image","src","result","crossOrigin","canvas","document","createElement","ctx","getContext","height","drawImage","imageData","getImageData","data","putImageData","toBlob","blob","url","URL","createObjectURL","readAsDataURL","padding","backgroundColor","border","borderRadius","cursor","textAlign","alt","maxWidth","href","download","Toast","onClose","role","container","text","closeBtn","justifyContent","alignItems","boxShadow","gap","fontFamily","flex","background"],"sourceRoot":""}