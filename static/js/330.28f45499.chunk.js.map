{"version":3,"file":"static/js/330.28f45499.chunk.js","mappings":"2LAKe,SAASA,IACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,iBAC1BG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,KAC9BK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MAE7BO,EAAY,SAACC,GACjBF,EAAS,CAAEG,QAASD,EAAKE,KADCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAE7BG,WAAW,IAAMR,EAAS,MAAO,IACnC,EAyCA,OACES,EAAAA,EAAAA,MAACC,EAAAA,EAAe,CAACC,MAAM,oCAA0BC,gBAAc,EAAAC,SAAA,EAE7DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,UAAQ,EACRC,OAAO,OACPC,gBAAiBzB,KAGnBgB,EAAAA,EAAAA,MAAA,OAAKU,MAAO,CAAEC,UAAW,OAAQC,QAAS,OAAQC,IAAK,OAAQC,WAAY,SAAUC,SAAU,QAASX,SAAA,EACtGC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPC,EAAAA,EAAAA,KAAA,SACEV,KAAK,OACLqB,MAAO9B,EACP+B,SAAWC,GAAM/B,EAAQ+B,EAAEC,OAAOH,OAClCN,MAAO,CAAEU,QAAS,MAAOC,MAAO,YAElChB,EAAAA,EAAAA,KAAA,UACEiB,QAzDeC,UACrB,GAAqB,IAAjBxC,EAAMc,OAAc,OAAOL,EAAU,qBAAsB,SAC/D,MAAM,YAAEgC,EAAW,cAAEC,EAAa,IAAEC,EAAG,QAAEC,SAAkB,+BAErDC,EAAS,GAEf,IAAK,MAAMC,KAAQ9C,EACjB,IACE,MAAM+C,QAAcD,EAAKE,cACnBC,QAAYR,EAAYS,KAAKH,GAC7BI,QAAaF,EAAIG,UAAUV,EAAcW,eACjCJ,EAAIK,WAEZC,QAASC,IACb,MAAM,MAAElB,EAAK,OAAEmB,GAAWD,EAAKE,UAC/BF,EAAKG,SAASxD,EAAM,CAClByD,EAAGtB,EAAQ,EAAI,IACfuB,EAAGJ,EAAS,EAAI,IAChBK,KAAM,GACNX,OACAY,MAAOpB,EAAI,GAAK,GAAK,IACrBqB,OAAQpB,GAAS,IACjBqB,QAAS,OAIb,MAAMC,QAAmBjB,EAAIkB,OACvBC,EAAO,IAAIC,KAAK,CAACH,GAAa,CAAEtD,KAAM,oBACtC0D,EAAMC,IAAIC,gBAAgBJ,GAChCvB,EAAO4B,KAAK,CAAEC,KAAM,GAAG5B,EAAK4B,KAAKC,QAAQ,OAAQ,sBAAuBL,MAAKF,QAC/E,CAAE,MACA3D,EAAU,uBAAuBqC,EAAK4B,OAAQ,QAChD,CAGFpE,EAAUuC,GACVpC,EAAU,eAAeoC,EAAO/B,iBAAkB,YAsB5Ca,MAAO,CACLU,QAAS,YACTuC,gBAAiB,UACjBb,MAAO,QACPc,OAAQ,OACRC,aAAc,MACdC,OAAQ,WACR1D,SACH,sBAMHJ,EAAAA,EAAAA,MAAA,OAAKU,MAAO,CAAEC,UAAW,OAAQoD,SAAU,UAAWC,WAAY,MAAOlB,MAAO,QAAS1C,SAAA,EACvFC,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEqD,SAAU,UAAW3D,SAAC,wCACnCJ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,mKAEcC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,oEAEzCJ,EAAAA,EAAAA,MAAA,MAAIU,MAAO,CAAEC,UAAW,OAAQsD,YAAa,QAAS7D,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6CACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oEAIPhB,EAAOS,OAAS,IACfQ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,UAAW,OAAQC,QAAS,OAAQC,IAAK,OAAQE,SAAU,QAASX,SAC/EhB,EAAO8E,IAAI,CAAAC,EAAgBC,KAAC,IAAhB,KAAEX,EAAI,IAAEJ,GAAKc,EAAA,OACxBnE,EAAAA,EAAAA,MAAA,OAAaU,MAAO,CAAE2D,UAAW,UAAWjE,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEqD,SAAU,UAAW3D,SAAEqD,KACnCpD,EAAAA,EAAAA,KAAA,KAAGiE,KAAMjB,EAAKkB,SAAUd,EAAKrD,UAC3BC,EAAAA,EAAAA,KAAA,UAAQK,MAAO,CACbC,UAAW,MACXS,QAAS,WACTuC,gBAAiB,UACjBb,MAAO,QACPc,OAAQ,OACRC,aAAc,MACdC,OAAQ,WACR1D,SAAC,iBAXGgE,OAoBf9E,IAASe,EAAAA,EAAAA,KAACmE,EAAAA,EAAK,CAAC9E,QAASJ,EAAMI,QAASC,KAAML,EAAMK,KAAM8E,QAASA,IAAMlF,EAAS,UAGzF,C,yDC9DA,QA9DA,SAAiB4E,GAA+D,IAA9D,OAAEO,EAAM,gBAAEjE,EAAe,OAAED,EAAS,IAAG,SAAED,GAAW,GAAO4D,EAC3E,MAAMQ,GAAWC,EAAAA,EAAAA,WACVC,EAAeC,IAAoB7F,EAAAA,EAAAA,UAAS,IA+BnD,OACEe,EAAAA,EAAAA,MAAA,OACE+E,UAAU,WACVL,OAhCgBxD,IAClBA,EAAE8D,iBACF,MAAMjG,EAAQkG,MAAMC,KAAKhE,EAAEiE,aAAapG,OACnB,IAAjBA,EAAMc,SAEViF,EAAiB/F,GAEbwB,GAAYE,EACdA,EAAgB1B,GACP2F,GACTA,EAAO3F,EAAM,MAuBbqG,WAAalE,GAAMA,EAAE8D,iBACrB1D,QApBgB+D,IAAMV,EAASW,QAAQC,QAoBlBnF,SAAA,EAErBJ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,mBAAiBG,EAAW,IAAM,GAAG,2BACxCF,EAAAA,EAAAA,KAAA,SACEV,KAAK,OACL6F,IAAKb,EACLnE,OAAQA,EACRD,SAAUA,EACVU,SA1BgBC,IACpB,MAAMnC,EAAQkG,MAAMC,KAAKhE,EAAEC,OAAOpC,OACb,IAAjBA,EAAMc,SAEViF,EAAiB/F,GAEbwB,GAAYE,EACdA,EAAgB1B,GACP2F,GACTA,EAAO3F,EAAM,MAkBX2B,MAAO,CAAEE,QAAS,UAEnBiE,EAAchF,OAAS,IACtBQ,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEC,UAAW,OAAQsD,YAAa,QAAS7D,SACnDyE,EAAcX,IAAI,CAACrC,EAAMuC,KACxB/D,EAAAA,EAAAA,KAAA,MAAYK,MAAO,CAAEqD,SAAU,SAAUjB,MAAO,QAAS1C,SACtDyB,EAAK4B,MADCW,QAQrB,C,uDC5De,SAASI,EAAKL,GAAuC,IAAtC,QAAEzE,EAAO,KAAEC,EAAO,OAAM,QAAE8E,GAASN,EAC/D,OACEnE,EAAAA,EAAAA,MAAA,OAAK+E,UAAW,eAAepF,IAAQ8F,KAAK,QAAQ,YAAU,YAAY/E,MAAOgF,EAAUtF,SAAA,EACzFC,EAAAA,EAAAA,KAAA,QAAMK,MAAOxB,EAAKkB,SAAEV,KACpBW,EAAAA,EAAAA,KAAA,UACEiB,QAASmD,EACT/D,MAAOiF,EACP,aAAW,uBAAsBvF,SAClC,WAKP,CAGA,MAAMsF,EAAY,CAChB9E,QAAS,OACTgF,eAAgB,gBAChB9E,WAAY,SACZM,QAAS,YACTyC,aAAc,MACdgC,UAAW,6BACXlC,gBAAiB,UACjBI,SAAU,UACVjB,MAAO,OACPjC,IAAK,OACLiF,WAAY,qCAGR5G,EAAO,CACX6G,KAAM,GAGFJ,EAAW,CACfK,WAAY,cACZpC,OAAQ,OACRG,SAAU,SACVD,OAAQ,UACRhB,MAAO,O","sources":["components/filetools/pdftools/AddWatermark.js","components/filetools/DropZone.js","components/Toast.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function AddWatermark() {\r\n  const [files, setFiles] = useState([]);\r\n  const [text, setText] = useState('CONFIDENTIAL');\r\n  const [result, setResult] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const applyWatermark = async () => {\r\n    if (files.length === 0) return showToast('Upload a PDF first', 'error');\r\n    const { PDFDocument, StandardFonts, rgb, degrees } = await import('pdf-lib');\r\n\r\n    const output = [];\r\n\r\n    for (const file of files) {\r\n      try {\r\n        const bytes = await file.arrayBuffer();\r\n        const doc = await PDFDocument.load(bytes);\r\n        const font = await doc.embedFont(StandardFonts.HelveticaBold);\r\n        const pages = doc.getPages();\r\n\r\n        pages.forEach((page) => {\r\n          const { width, height } = page.getSize();\r\n          page.drawText(text, {\r\n            x: width / 2 - 200,\r\n            y: height / 2 + 100,\r\n            size: 60,\r\n            font,\r\n            color: rgb(0.6, 0.6, 0.6),\r\n            rotate: degrees(-30),\r\n            opacity: 0.3\r\n          });\r\n        });\r\n\r\n        const finalBytes = await doc.save();\r\n        const blob = new Blob([finalBytes], { type: 'application/pdf' });\r\n        const url = URL.createObjectURL(blob);\r\n        output.push({ name: `${file.name.replace('.pdf', '')}_watermarked.pdf`, url, blob });\r\n      } catch {\r\n        showToast(`Failed to watermark ${file.name}`, 'error');\r\n      }\r\n    }\r\n\r\n    setResult(output);\r\n    showToast(`Watermarked ${output.length} file(s)`, 'success');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"üíß Add Watermark to PDF\" showBackButton>\r\n      \r\n      <DropZone\r\n        multiple\r\n        accept=\".pdf\"\r\n        onMultipleFiles={setFiles}\r\n      />\r\n\r\n      <div style={{ marginTop: '20px', display: 'flex', gap: '14px', alignItems: 'center', flexWrap: 'wrap' }}>\r\n        <label>Watermark Text:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          style={{ padding: '8px', width: '200px' }}\r\n        />\r\n        <button\r\n          onClick={applyWatermark}\r\n          style={{\r\n            padding: '10px 16px',\r\n            backgroundColor: '#3f51b5',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '6px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Add Watermark\r\n        </button>\r\n      </div>\r\n\r\n      {/* SEO-enhanced guidance block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Add Custom Watermarks to PDF Files</h2>\r\n        <p>\r\n          Overlay watermark text like ‚ÄúCONFIDENTIAL‚Äù or ‚ÄúDRAFT‚Äù across your PDF pages ‚Äî all in-browser, with no upload required.\r\n          This tool uses <strong>pdf-lib</strong> to render semi-transparent text diagonally across each page.\r\n        </p>\r\n        <ul style={{ marginTop: '10px', paddingLeft: '20px' }}>\r\n          <li>üíß Customize watermark text and style</li>\r\n          <li>üìÑ Works with multi-page PDFs</li>\r\n          <li>üîê 100% private ‚Äî processed on your device</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {result.length > 0 && (\r\n        <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n          {result.map(({ name, url }, i) => (\r\n            <div key={i} style={{ textAlign: 'center' }}>\r\n              <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n              <a href={url} download={name}>\r\n                <button style={{\r\n                  marginTop: '8px',\r\n                  padding: '6px 12px',\r\n                  backgroundColor: '#4caf50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                  Download\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["AddWatermark","files","setFiles","useState","text","setText","result","setResult","toast","setToast","showToast","msg","message","type","arguments","length","undefined","setTimeout","_jsxs","FileToolsLayout","title","showBackButton","children","_jsx","DropZone","multiple","accept","onMultipleFiles","style","marginTop","display","gap","alignItems","flexWrap","value","onChange","e","target","padding","width","onClick","async","PDFDocument","StandardFonts","rgb","degrees","output","file","bytes","arrayBuffer","doc","load","font","embedFont","HelveticaBold","getPages","forEach","page","height","getSize","drawText","x","y","size","color","rotate","opacity","finalBytes","save","blob","Blob","url","URL","createObjectURL","push","name","replace","backgroundColor","border","borderRadius","cursor","fontSize","lineHeight","paddingLeft","map","_ref","i","textAlign","href","download","Toast","onClose","onDrop","inputRef","useRef","selectedFiles","setSelectedFiles","className","preventDefault","Array","from","dataTransfer","onDragOver","handleClick","current","click","ref","role","container","closeBtn","justifyContent","boxShadow","fontFamily","flex","background"],"sourceRoot":""}