{"version":3,"file":"static/js/8315.3eb3ff6f.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/pdftools/SplitPDF.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        √ó\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// üé® Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function SplitPDF() {\r\n  const [file, setFile] = useState(null);\r\n  const [splitPages, setSplitPages] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleSplit = async () => {\r\n    if (!file) return showToast('Upload a PDF first.', 'error');\r\n\r\n    const { PDFDocument } = await import('pdf-lib');\r\n\r\n    const bytes = await file.arrayBuffer();\r\n    const pdf = await PDFDocument.load(bytes);\r\n    const pageCount = pdf.getPageCount();\r\n    const results = [];\r\n\r\n    for (let i = 0; i < pageCount; i++) {\r\n      const newPdf = await PDFDocument.create();\r\n      const [page] = await newPdf.copyPages(pdf, [i]);\r\n      newPdf.addPage(page);\r\n      const output = await newPdf.save();\r\n      const blob = new Blob([output], { type: 'application/pdf' });\r\n      const url = URL.createObjectURL(blob);\r\n      results.push({ page: i + 1, url, blob });\r\n    }\r\n\r\n    setSplitPages(results);\r\n    showToast(`Split into ${results.length} pages`, 'success');\r\n  };\r\n\r\n  const downloadZip = async () => {\r\n    const JSZip = (await import('jszip')).default;\r\n    const { saveAs } = await import('file-saver');\r\n    const zip = new JSZip();\r\n\r\n    splitPages.forEach(({ page, blob }) => {\r\n      zip.file(`page_${page}.pdf`, blob);\r\n    });\r\n\r\n    const zipped = await zip.generateAsync({ type: 'blob' });\r\n    saveAs(zipped, 'split_pages.zip');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"‚úÇÔ∏è Split PDF\" showBackButton={true}>\r\n      <DropZone\r\n        accept=\"application/pdf\"\r\n        onDrop={(f) => {\r\n          setFile(f);\r\n          setSplitPages([]);\r\n        }}\r\n      />\r\n      {/* üîç SEO-enhanced guidance block */}\r\n<div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n  <h2 style={{ fontSize: '1.2rem' }}>Split Large PDFs into Individual Pages or Sections</h2>\r\n  <p>\r\n    Easily divide your PDF into specific page ranges or separate files using this offline PDF splitter tool. It‚Äôs perfect for distributing chapters, invoices, or sections from lengthy documents ‚Äî 100% browser-based using <strong>pdf-lib</strong>.\r\n  </p>\r\n  <ul style={{ paddingLeft: '20px' }}>\r\n    <li>‚úÇÔ∏è Select page ranges or extract each page separately</li>\r\n    <li>üìÅ Useful for academic, legal, and admin documents</li>\r\n    <li>üîê Files processed locally ‚Äî no server upload</li>\r\n  </ul>\r\n</div>\r\n\r\n\r\n      {file && (\r\n        <button\r\n          onClick={handleSplit}\r\n          style={{\r\n            marginTop: '20px',\r\n            padding: '10px 16px',\r\n            backgroundColor: '#3f51b5',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '6px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Split PDF into Pages\r\n        </button>\r\n      )}\r\n\r\n      {splitPages.length > 0 && (\r\n        <>\r\n          <div style={{ marginTop: '30px', display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n            {splitPages.map(({ page, url }) => (\r\n              <div key={page} style={{ textAlign: 'center' }}>\r\n                <p>Page {page}</p>\r\n                <a href={url} download={`page_${page}.pdf`}>\r\n                  <button style={{\r\n                    padding: '6px 12px',\r\n                    fontSize: '0.85rem',\r\n                    backgroundColor: '#4caf50',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    cursor: 'pointer'\r\n                  }}>\r\n                    Download\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            onClick={downloadZip}\r\n            style={{\r\n              marginTop: '20px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#1976d2',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ‚¨á Download All as ZIP\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}\r\n"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","SplitPDF","setFile","splitPages","setSplitPages","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","showBackButton","DropZone","f","lineHeight","async","PDFDocument","bytes","arrayBuffer","pdf","load","pageCount","getPageCount","results","newPdf","create","page","copyPages","addPage","output","save","blob","Blob","url","URL","createObjectURL","push","_Fragment","flexWrap","_ref2","textAlign","href","download","JSZip","default","saveAs","zip","forEach","generateAsync"],"sourceRoot":""}