{"version":3,"file":"static/js/8377.9fafeb27.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/Toast.js","components/filetools/pdftools/RemovePages.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function RemovePages() {\r\n  const [files, setFiles] = useState([]);\r\n  const [pagesToRemove, setPagesToRemove] = useState('');\r\n  const [result, setResult] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleRemove = async () => {\r\n    if (files.length === 0) return showToast('Upload a PDF first', 'error');\r\n    const { PDFDocument } = await import('pdf-lib');\r\n\r\n    const output = [];\r\n\r\n    for (const file of files) {\r\n      try {\r\n        const bytes = await file.arrayBuffer();\r\n        const original = await PDFDocument.load(bytes);\r\n        const newDoc = await PDFDocument.create();\r\n\r\n        const toRemove = pagesToRemove\r\n          .split(',')\r\n          .map(n => parseInt(n.trim(), 10) - 1)\r\n          .filter(n => !isNaN(n));\r\n\r\n        const pageIndices = original.getPageIndices().filter(i => !toRemove.includes(i));\r\n        const pages = await newDoc.copyPages(original, pageIndices);\r\n        pages.forEach(p => newDoc.addPage(p));\r\n\r\n        const finalBytes = await newDoc.save();\r\n        const blob = new Blob([finalBytes], { type: 'application/pdf' });\r\n        const url = URL.createObjectURL(blob);\r\n        output.push({ name: `${file.name.replace('.pdf', '')}_removed.pdf`, url, blob });\r\n      } catch {\r\n        showToast(`Error processing ${file.name}`, 'error');\r\n      }\r\n    }\r\n\r\n    setResult(output);\r\n    showToast(`Removed pages from ${output.length} file(s)`, 'success');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"🗑️ Remove Pages from PDF\" showBackButton>\r\n      <DropZone\r\n        multiple\r\n        accept=\".pdf\"\r\n        onMultipleFiles={setFiles}\r\n      />\r\n\r\n      <div style={{ marginTop: '20px', display: 'flex', gap: '14px', alignItems: 'center', flexWrap: 'wrap' }}>\r\n        <label>Pages to remove (e.g. 1,3,5):</label>\r\n        <input\r\n          type=\"text\"\r\n          value={pagesToRemove}\r\n          onChange={(e) => setPagesToRemove(e.target.value)}\r\n          style={{ padding: '8px', width: '140px' }}\r\n        />\r\n        <button\r\n          onClick={handleRemove}\r\n          style={{\r\n            padding: '10px 16px',\r\n            backgroundColor: '#e53935',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '6px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Remove Pages\r\n        </button>\r\n      </div>\r\n\r\n      {/* SEO block for visibility */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Remove Unwanted Pages from PDF Instantly</h2>\r\n        <p>\r\n          Choose any pages you want to remove — simply enter their page numbers and get a cleaner, smaller PDF.\r\n          No need for sign-up or server uploads. This tool preserves privacy and performs directly in your browser.\r\n        </p>\r\n        <ul style={{ marginTop: '10px', paddingLeft: '20px' }}>\r\n          <li>🧹 Remove blank or irrelevant pages easily</li>\r\n          <li>📄 Supports multi-file batch cleanup</li>\r\n          <li>🔐 Secure — processed locally via <strong>pdf-lib</strong></li>\r\n        </ul>\r\n      </div>\r\n\r\n      {result.length > 0 && (\r\n        <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n          {result.map(({ name, url }, i) => (\r\n            <div key={i} style={{ textAlign: 'center' }}>\r\n              <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n              <a href={url} download={name}>\r\n                <button style={{\r\n                  marginTop: '8px',\r\n                  padding: '6px 12px',\r\n                  backgroundColor: '#4caf50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                  Download\r\n                </button>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n    </FileToolsLayout>\r\n  );\r\n}"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","Toast","message","onClose","role","container","text","closeBtn","justifyContent","alignItems","padding","borderRadius","boxShadow","backgroundColor","gap","fontFamily","flex","background","border","cursor","RemovePages","setFiles","pagesToRemove","setPagesToRemove","result","setResult","toast","setToast","showToast","msg","arguments","undefined","setTimeout","FileToolsLayout","title","showBackButton","DropZone","flexWrap","value","width","async","PDFDocument","output","bytes","arrayBuffer","original","load","newDoc","create","toRemove","split","n","parseInt","trim","filter","isNaN","pageIndices","getPageIndices","includes","copyPages","forEach","p","addPage","finalBytes","save","blob","Blob","url","URL","createObjectURL","push","replace","lineHeight","textAlign","href","download"],"sourceRoot":""}