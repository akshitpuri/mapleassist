{"version":3,"file":"static/js/3557.b7918527.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/converters/CodeDataConverters.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function CodeDataConverters() {\r\n  const [codeFiles, setCodeFiles] = useState([]);\r\n  const [format, setFormat] = useState('pdf');\r\n  const [convertedFiles, setConvertedFiles] = useState([]);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const generatePDF = async (text) => {\r\n    const { PDFDocument, StandardFonts } = await import('pdf-lib');\r\n    const pdfDoc = await PDFDocument.create();\r\n    const page = pdfDoc.addPage();\r\n    const font = await pdfDoc.embedFont(StandardFonts.Courier); // Use monospace for code\r\n\r\n    page.setFont(font);\r\n    page.drawText(text.slice(0, 4000), {\r\n      x: 50,\r\n      y: page.getHeight() - 50,\r\n      maxWidth: 500,\r\n      lineHeight: 20\r\n    });\r\n\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n    return URL.createObjectURL(blob);\r\n  };\r\n\r\n  const convertFiles = async () => {\r\n    if (codeFiles.length === 0) return showToast('Please upload files', 'error');\r\n\r\n    const converted = [];\r\n\r\n    for (const file of codeFiles) {\r\n      const name = file.name.split('.')[0];\r\n      const ext = file.name.split('.').pop().toLowerCase();\r\n\r\n      if (!['js', 'py', 'html', 'json', 'csv'].includes(ext)) {\r\n        showToast(`Unsupported file: ${file.name}`, 'warning');\r\n        continue;\r\n      }\r\n\r\n      try {\r\n        const text = await file.text();\r\n\r\n        if (format === 'txt') {\r\n          const blob = new Blob([text], { type: 'text/plain' });\r\n          converted.push({ name: `${name}.txt`, url: URL.createObjectURL(blob), blob });\r\n        } else if (format === 'pdf') {\r\n          const pdfUrl = await generatePDF(text);\r\n          const blob = await fetch(pdfUrl).then(res => res.blob());\r\n          converted.push({ name: `${name}.pdf`, url: pdfUrl, blob });\r\n        }\r\n      } catch {\r\n        showToast(`Error converting ${file.name}`, 'error');\r\n      }\r\n    }\r\n\r\n    setConvertedFiles(converted);\r\n    showToast(`Converted ${converted.length} file(s)!`, 'success');\r\n  };\r\n\r\n  const downloadZip = async () => {\r\n    const JSZip = (await import('jszip')).default;\r\n    const { saveAs } = await import('file-saver');\r\n    const zip = new JSZip();\r\n\r\n    convertedFiles.forEach(({ name, blob }) => zip.file(name, blob));\r\n    const zipped = await zip.generateAsync({ type: 'blob' });\r\n    saveAs(zipped, 'converted_code_data.zip');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"📊 Code & Data Converter\">\r\n      <DropZone\r\n        multiple\r\n        accept=\".js,.py,.html,.json,.csv\"\r\n        onMultipleFiles={(files) => {\r\n          setCodeFiles(files);\r\n          setConvertedFiles([]);\r\n        }}\r\n      />\r\n\r\n      {/* 📘 SEO Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Convert Code or Data Files into TXT or PDF</h2>\r\n        <p>\r\n          Convert programming files like <code>.js</code>, <code>.py</code>, <code>.html</code>, and <code>.json</code> into human-readable\r\n          documents — either plain text or PDF format. Perfect for sharing, archiving, or documentation.\r\n          Runs entirely in your browser with no uploads.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>💻 Supports code and data formats: JS, HTML, JSON, Python, CSV</li>\r\n          <li>📝 Choose TXT for raw export or PDF for formatted sharing</li>\r\n          <li>📦 Download all converted files as a single ZIP archive</li>\r\n          <li>🔒 No server required — 100% offline and private</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '20px', display: 'flex', gap: '14px', alignItems: 'center' }}>\r\n        <label>Convert to:</label>\r\n        <select\r\n          value={format}\r\n          onChange={(e) => setFormat(e.target.value)}\r\n          style={{ padding: '8px' }}\r\n        >\r\n          <option value=\"pdf\">PDF</option>\r\n          <option value=\"txt\">Text (.txt)</option>\r\n        </select>\r\n        <button\r\n          onClick={convertFiles}\r\n          style={{\r\n            padding: '10px 16px',\r\n            backgroundColor: '#3f51b5',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '6px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Convert Files\r\n        </button>\r\n      </div>\r\n\r\n      {convertedFiles.length > 0 && (\r\n        <>\r\n          <div style={{ marginTop: '30px', display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n            {convertedFiles.map(({ name, url }, i) => (\r\n              <div key={i} style={{ textAlign: 'center' }}>\r\n                <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n                <a href={url} download={name}>\r\n                  <button\r\n                    style={{\r\n                      padding: '6px 12px',\r\n                      backgroundColor: '#4caf50',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer'\r\n                    }}\r\n                  >\r\n                    Download\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            onClick={downloadZip}\r\n            style={{\r\n              marginTop: '30px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#1976d2',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ⬇ Download All as ZIP\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {toast && (\r\n        <Toast\r\n          message={toast.message}\r\n          type={toast.type}\r\n          onClose={() => setToast(null)}\r\n        />\r\n      )}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","CodeDataConverters","codeFiles","setCodeFiles","format","setFormat","convertedFiles","setConvertedFiles","toast","setToast","showToast","msg","message","arguments","undefined","setTimeout","generatePDF","async","PDFDocument","StandardFonts","pdfDoc","create","page","addPage","font","embedFont","Courier","setFont","drawText","text","slice","x","y","getHeight","maxWidth","lineHeight","pdfBytes","save","blob","Blob","URL","createObjectURL","FileToolsLayout","title","DropZone","gap","alignItems","value","padding","converted","split","ext","pop","toLowerCase","includes","push","url","pdfUrl","fetch","then","res","backgroundColor","border","borderRadius","cursor","_Fragment","flexWrap","_ref2","textAlign","href","download","JSZip","default","saveAs","zip","forEach","generateAsync","Toast","onClose","role","container","closeBtn","justifyContent","boxShadow","fontFamily","flex","background"],"sourceRoot":""}