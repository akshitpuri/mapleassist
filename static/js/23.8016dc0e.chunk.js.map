{"version":3,"file":"static/js/23.8016dc0e.chunk.js","mappings":"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","sources":["components/filetools/converters/VideoConverters.js","components/filetools/DropZone.js","components/Toast.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function VideoConverters() {\r\n  const [convertedFiles, setConvertedFiles] = useState([]);\r\n  const [format, setFormat] = useState('webm');\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const handleConvert = async (incoming) => {\r\n    setConvertedFiles([]);\r\n    const converted = [];\r\n\r\n    for (const file of incoming) {\r\n      try {\r\n        const blobURL = URL.createObjectURL(file);\r\n        const videoEl = document.createElement('video');\r\n        videoEl.src = blobURL;\r\n        videoEl.muted = true;\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 480;\r\n        canvas.height = 270;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const outputStream = canvas.captureStream();\r\n        const mime = format === 'gif' ? 'video/webm' : `video/${format}`;\r\n        const recorder = new MediaRecorder(outputStream, { mimeType: mime });\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = (e) => chunks.push(e.data);\r\n        recorder.onstop = () => {\r\n          const outBlob = new Blob(chunks, { type: mime });\r\n          const outUrl = URL.createObjectURL(outBlob);\r\n          const name = `${file.name.split('.')[0]}.${format}`;\r\n          converted.push({ name, url: outUrl, blob: outBlob });\r\n\r\n          if (converted.length === incoming.length) {\r\n            setConvertedFiles(converted);\r\n            showToast(`Converted ${converted.length} video(s)`, 'success');\r\n          }\r\n        };\r\n\r\n        videoEl.oncanplaythrough = () => {\r\n          recorder.start();\r\n          videoEl.play();\r\n\r\n          const drawFrame = () => {\r\n            ctx.drawImage(videoEl, 0, 0, canvas.width, canvas.height);\r\n            if (!videoEl.paused && !videoEl.ended) requestAnimationFrame(drawFrame);\r\n          };\r\n\r\n          drawFrame();\r\n\r\n          setTimeout(() => {\r\n            recorder.stop();\r\n            videoEl.pause();\r\n          }, Math.min(videoEl.duration * 1000, 15000));\r\n        };\r\n\r\n        document.body.appendChild(videoEl);\r\n        videoEl.load();\r\n      } catch {\r\n        showToast(`Error converting ${file.name}`, 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  const downloadZip = async () => {\r\n    const JSZip = (await import('jszip')).default;\r\n    const { saveAs } = await import('file-saver');\r\n    const zip = new JSZip();\r\n\r\n    convertedFiles.forEach(({ name, blob }) => zip.file(name, blob));\r\n    const zipped = await zip.generateAsync({ type: 'blob' });\r\n    saveAs(zipped, 'converted_videos.zip');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"🎞️ Video Converter\">\r\n      <DropZone\r\n        multiple\r\n        accept=\".mp4,.webm,.ogg,.mov\"\r\n        onMultipleFiles={handleConvert}\r\n      />\r\n\r\n      {/* 📘 SEO Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Convert MP4, WebM, OGG, MOV Videos in Your Browser</h2>\r\n        <p>\r\n          Instantly convert video files to WebM, MP4, or GIF formats with no upload required.\r\n          This offline tool captures your video content in the browser and exports it for download.\r\n          Perfect for reels, memes, demos, or compressed shareable clips.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>🎥 Accepts MP4, WebM, OGG, MOV formats</li>\r\n          <li>🔁 Convert to WebM, MP4, or animated GIF</li>\r\n          <li>📦 Bundle all converted videos into one ZIP</li>\r\n          <li>🔒 100% private — never leaves your device</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '20px', display: 'flex', gap: '12px', alignItems: 'center' }}>\r\n        <label>Convert to:</label>\r\n        <select\r\n          value={format}\r\n          onChange={(e) => setFormat(e.target.value)}\r\n          style={{ padding: '8px' }}\r\n        >\r\n          <option value=\"webm\">WebM (.webm)</option>\r\n          <option value=\"mp4\">MP4 (.mp4)</option>\r\n          <option value=\"gif\">GIF (.gif)</option>\r\n        </select>\r\n      </div>\r\n\r\n      {convertedFiles.length > 0 && (\r\n        <>\r\n          <div style={{ marginTop: '30px', display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n            {convertedFiles.map(({ name, url }, i) => (\r\n              <div key={i} style={{ textAlign: 'center' }}>\r\n                <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n                <video src={url} controls style={{ width: '200px' }} />\r\n                <a href={url} download={name}>\r\n                  <button style={{\r\n                    marginTop: '8px',\r\n                    padding: '6px 12px',\r\n                    backgroundColor: '#4caf50',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    cursor: 'pointer'\r\n                  }}>\r\n                    Download\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            onClick={downloadZip}\r\n            style={{\r\n              marginTop: '30px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#1976d2',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ⬇ Download All as ZIP\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {toast && (\r\n        <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />\r\n      )}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["VideoConverters","convertedFiles","setConvertedFiles","useState","format","setFormat","toast","setToast","showToast","msg","message","type","arguments","length","undefined","setTimeout","_jsxs","FileToolsLayout","title","children","_jsx","DropZone","multiple","accept","onMultipleFiles","async","converted","file","incoming","blobURL","URL","createObjectURL","videoEl","document","createElement","src","muted","canvas","width","height","ctx","getContext","outputStream","captureStream","mime","recorder","MediaRecorder","mimeType","chunks","ondataavailable","e","push","data","onstop","outBlob","Blob","outUrl","name","split","url","blob","oncanplaythrough","start","play","drawFrame","drawImage","paused","ended","requestAnimationFrame","stop","pause","Math","min","duration","body","appendChild","load","style","marginTop","fontSize","lineHeight","color","paddingLeft","display","gap","alignItems","value","onChange","target","padding","_Fragment","flexWrap","map","_ref2","i","textAlign","controls","href","download","backgroundColor","border","borderRadius","cursor","onClick","JSZip","default","saveAs","zip","forEach","_ref","generateAsync","Toast","onClose","onDrop","inputRef","useRef","selectedFiles","setSelectedFiles","className","preventDefault","files","Array","from","dataTransfer","onDragOver","handleClick","current","click","ref","role","container","text","closeBtn","justifyContent","boxShadow","fontFamily","flex","background"],"sourceRoot":""}