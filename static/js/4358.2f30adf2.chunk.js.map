{"version":3,"file":"static/js/4358.2f30adf2.chunk.js","mappings":"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","sources":["components/filetools/DropZone.js","components/filetools/converters/eBookConverters.js","components/Toast.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './DropZone.css';\r\n\r\nfunction DropZone({ onDrop, onMultipleFiles, accept = '*', multiple = false }) {\r\n  const inputRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n\r\n  const handleChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setSelectedFiles(files);\r\n\r\n    if (multiple && onMultipleFiles) {\r\n      onMultipleFiles(files);\r\n    } else if (onDrop) {\r\n      onDrop(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropzone\"\r\n      onDrop={handleDrop}\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onClick={handleClick}\r\n    >\r\n      <p>Drag & drop file{multiple ? 's' : ''}, or click to browse</p>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept={accept}\r\n        multiple={multiple}\r\n        onChange={handleChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {selectedFiles.length > 0 && (\r\n        <ul style={{ marginTop: '10px', paddingLeft: '16px' }}>\r\n          {selectedFiles.map((file, i) => (\r\n            <li key={i} style={{ fontSize: '0.9rem', color: '#555' }}>\r\n              {file.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","import React, { useState } from 'react';\r\nimport FileToolsLayout from '../FileToolsLayout';\r\nimport DropZone from '../DropZone';\r\nimport Toast from '../../Toast';\r\n\r\nexport default function EbookConverters() {\r\n  const [ebooks, setEbooks] = useState([]);\r\n  const [convertedFiles, setConvertedFiles] = useState([]);\r\n  const [format, setFormat] = useState('txt');\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = (msg, type = 'info') => {\r\n    setToast({ message: msg, type });\r\n    setTimeout(() => setToast(null), 3000);\r\n  };\r\n\r\n  const convertFiles = async (incoming) => {\r\n    setEbooks(incoming);\r\n    setConvertedFiles([]);\r\n    const converted = [];\r\n\r\n    for (const file of incoming) {\r\n      try {\r\n        const ext = file.name.split('.').pop().toLowerCase();\r\n        const baseName = file.name.replace(/\\.[^/.]+$/, '');\r\n        let content = '';\r\n\r\n        if (ext === 'epub') {\r\n          const epub = (await import('epubjs')).default;\r\n          const book = epub(file);\r\n          const container = document.createElement('div');\r\n          book.renderTo(container, { width: 1, height: 1 });\r\n          await book.ready;\r\n          const spineItem = book.spine.get(0);\r\n          content = await book.archive.createUrl(spineItem.href, true); // Basic preview text\r\n        } else if (ext === 'txt') {\r\n          content = await file.text();\r\n        } else if (ext === 'mobi') {\r\n          showToast(`.mobi not supported client-side (yet)`, 'warning');\r\n          continue;\r\n        }\r\n\r\n        let blob, url;\r\n\r\n        if (format === 'txt') {\r\n          blob = new Blob([content], { type: 'text/plain' });\r\n          url = URL.createObjectURL(blob);\r\n          converted.push({ name: `${baseName}.txt`, url, blob });\r\n        } else if (format === 'pdf') {\r\n          const { PDFDocument, StandardFonts } = await import('pdf-lib');\r\n          const pdfDoc = await PDFDocument.create();\r\n          const page = pdfDoc.addPage();\r\n          const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n\r\n          page.setFont(font);\r\n          page.drawText(content.slice(0, 3000), {\r\n            x: 50,\r\n            y: page.getHeight() - 50,\r\n            maxWidth: 500,\r\n            lineHeight: 20\r\n          });\r\n\r\n          const pdfBytes = await pdfDoc.save();\r\n          blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n          url = URL.createObjectURL(blob);\r\n          converted.push({ name: `${baseName}.pdf`, url, blob });\r\n        }\r\n      } catch {\r\n        showToast(`Error converting ${file.name}`, 'error');\r\n      }\r\n    }\r\n\r\n    setConvertedFiles(converted);\r\n    showToast(`Converted ${converted.length} eBook(s)`, 'success');\r\n  };\r\n\r\n  const downloadZip = async () => {\r\n    const JSZip = (await import('jszip')).default;\r\n    const { saveAs } = await import('file-saver');\r\n    const zip = new JSZip();\r\n\r\n    convertedFiles.forEach(({ name, blob }) => zip.file(name, blob));\r\n    const zipped = await zip.generateAsync({ type: 'blob' });\r\n    saveAs(zipped, 'converted_ebooks.zip');\r\n  };\r\n\r\n  return (\r\n    <FileToolsLayout title=\"📚 eBook Converter\">\r\n      <DropZone\r\n        multiple\r\n        accept=\".epub,.mobi,.txt\"\r\n        onMultipleFiles={convertFiles}\r\n      />\r\n\r\n      {/* 📘 SEO Guidance Block */}\r\n      <div style={{ marginTop: '30px', fontSize: '0.95rem', lineHeight: '1.6', color: '#444' }}>\r\n        <h2 style={{ fontSize: '1.2rem' }}>Convert eBooks to PDF or Plain Text in Your Browser</h2>\r\n        <p>\r\n          Upload EPUB or TXT files and instantly convert them to shareable formats like PDF and TXT.\r\n          MOBI support coming soon. No server upload — all processing happens securely in your browser.\r\n        </p>\r\n        <ul style={{ paddingLeft: '20px' }}>\r\n          <li>📚 Supports EPUB and TXT input formats</li>\r\n          <li>🔄 Output options include PDF or plain TXT</li>\r\n          <li>📦 Batch conversion and ZIP packaging</li>\r\n          <li>🔒 Offline and private — ideal for personal libraries</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '20px', display: 'flex', gap: '14px', alignItems: 'center' }}>\r\n        <label>Convert to:</label>\r\n        <select\r\n          value={format}\r\n          onChange={(e) => setFormat(e.target.value)}\r\n          style={{ padding: '8px' }}\r\n        >\r\n          <option value=\"txt\">Text (.txt)</option>\r\n          <option value=\"pdf\">PDF (.pdf)</option>\r\n        </select>\r\n      </div>\r\n\r\n      {convertedFiles.length > 0 && (\r\n        <>\r\n          <div style={{ marginTop: '30px', display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n            {convertedFiles.map(({ name, url }, i) => (\r\n              <div key={i} style={{ textAlign: 'center' }}>\r\n                <p style={{ fontSize: '0.9rem' }}>{name}</p>\r\n                <a href={url} download={name}>\r\n                  <button style={{\r\n                    marginTop: '8px',\r\n                    padding: '6px 12px',\r\n                    backgroundColor: '#4caf50',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    cursor: 'pointer'\r\n                  }}>\r\n                    Download\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            onClick={downloadZip}\r\n            style={{\r\n              marginTop: '30px',\r\n              padding: '10px 16px',\r\n              backgroundColor: '#1976d2',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ⬇ Download All as ZIP\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {toast && (\r\n        <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />\r\n      )}\r\n    </FileToolsLayout>\r\n  );\r\n}","import React from 'react';\r\nimport './Toast.css';\r\n\r\nexport default function Toast({ message, type = 'info', onClose }) {\r\n  return (\r\n    <div className={`toast toast-${type}`} role=\"alert\" aria-live=\"assertive\" style={container}>\r\n      <span style={text}>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        style={closeBtn}\r\n        aria-label=\"Dismiss notification\"\r\n      >\r\n        ×\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🎨 Inline Styles (optional if not defined in Toast.css)\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,0.08)',\r\n  backgroundColor: '#f0f0f0',\r\n  fontSize: '0.95rem',\r\n  color: '#333',\r\n  gap: '12px',\r\n  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\r\n};\r\n\r\nconst text = {\r\n  flex: 1\r\n};\r\n\r\nconst closeBtn = {\r\n  background: 'transparent',\r\n  border: 'none',\r\n  fontSize: '1.2rem',\r\n  cursor: 'pointer',\r\n  color: '#666'\r\n};"],"names":["_ref","onDrop","onMultipleFiles","accept","multiple","inputRef","useRef","selectedFiles","setSelectedFiles","useState","_jsxs","className","e","preventDefault","files","Array","from","dataTransfer","length","onDragOver","onClick","handleClick","current","click","children","_jsx","type","ref","onChange","target","style","display","marginTop","paddingLeft","map","file","i","fontSize","color","name","EbookConverters","ebooks","setEbooks","convertedFiles","setConvertedFiles","format","setFormat","toast","setToast","showToast","msg","message","arguments","undefined","setTimeout","FileToolsLayout","title","DropZone","async","incoming","converted","ext","split","pop","toLowerCase","baseName","replace","blob","url","content","book","epub","default","container","document","createElement","renderTo","width","height","ready","spineItem","spine","get","archive","createUrl","href","text","Blob","URL","createObjectURL","push","PDFDocument","StandardFonts","pdfDoc","create","page","addPage","font","embedFont","Helvetica","setFont","drawText","slice","x","y","getHeight","maxWidth","lineHeight","pdfBytes","save","gap","alignItems","value","padding","_Fragment","flexWrap","_ref2","textAlign","download","backgroundColor","border","borderRadius","cursor","JSZip","saveAs","zip","forEach","generateAsync","Toast","onClose","role","closeBtn","justifyContent","boxShadow","fontFamily","flex","background"],"sourceRoot":""}